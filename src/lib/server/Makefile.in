# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#    Copyright (c) 2021 Grant Erickson
#    All rights reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an "AS
#    IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
#    express or implied.  See the License for the specific language
#    governing permissions and limitations under the License.
#

#
#    Description:
#      This file is the makefile for the OpenHLX server library.
#


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/lib/server
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/third_party/cycript/repo/m4/framework.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/ax_check_compiler.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage_reporting.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_debug.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_docs.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_optimization.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_tests.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_filtered_canonical.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_with_package.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/libtool.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltoptions.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltsugar.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltversion.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am \
	$(libopenhlx_server_a_include_HEADERS) $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/include/openhlx-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libopenhlx_server_a_includedir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libopenhlx_server_a_AR = $(AR) $(ARFLAGS)
libopenhlx_server_a_LIBADD =
am_libopenhlx_server_a_OBJECTS =  \
	libopenhlx_server_a-ApplicationControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-CommandBalanceResponseBasis.$(OBJEXT) \
	libopenhlx_server_a-CommandEqualizerBandResponseBasis.$(OBJEXT) \
	libopenhlx_server_a-CommandErrorResponse.$(OBJEXT) \
	libopenhlx_server_a-CommandManager.$(OBJEXT) \
	libopenhlx_server_a-CommandNameSetResponseBasis.$(OBJEXT) \
	libopenhlx_server_a-CommandPropertyResponseBases.$(OBJEXT) \
	libopenhlx_server_a-CommandQueryResponseBasis.$(OBJEXT) \
	libopenhlx_server_a-CommandRequestBasis.$(OBJEXT) \
	libopenhlx_server_a-CommandResponseBasis.$(OBJEXT) \
	libopenhlx_server_a-CommandSourceResponseBases.$(OBJEXT) \
	libopenhlx_server_a-CommandVolumeResponseBases.$(OBJEXT) \
	libopenhlx_server_a-ConfigurationControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-ConfigurationControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-ConnectionBasis.$(OBJEXT) \
	libopenhlx_server_a-ConnectionFactory.$(OBJEXT) \
	libopenhlx_server_a-ConnectionManager.$(OBJEXT) \
	libopenhlx_server_a-ConnectionSchemeIdentifierManager.$(OBJEXT) \
	libopenhlx_server_a-ConnectionTelnet.$(OBJEXT) \
	libopenhlx_server_a-EqualizerPresetsControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-EqualizerPresetsControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-FavoritesControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-FavoritesControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-FrontPanelControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-FrontPanelControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-GroupsControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-GroupsControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-InfraredControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-InfraredControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-ListenerBasis.$(OBJEXT) \
	libopenhlx_server_a-ListenerFactory.$(OBJEXT) \
	libopenhlx_server_a-ListenerTelnet.$(OBJEXT) \
	libopenhlx_server_a-NetworkControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-NetworkControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-ObjectControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-SourcesControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-SourcesControllerCommands.$(OBJEXT) \
	libopenhlx_server_a-ZonesControllerBasis.$(OBJEXT) \
	libopenhlx_server_a-ZonesControllerCommands.$(OBJEXT)
libopenhlx_server_a_OBJECTS = $(am_libopenhlx_server_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/include
depcomp = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandManager.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Po \
	./$(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Po \
	./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Po \
	./$(DEPDIR)/libopenhlx_server_a-ConnectionManager.Po \
	./$(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Po \
	./$(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Po \
	./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-ListenerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-ListenerFactory.Po \
	./$(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Po \
	./$(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Po \
	./$(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libopenhlx_server_a_SOURCES)
DIST_SOURCES = $(libopenhlx_server_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(libopenhlx_server_a_include_HEADERS) $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ASCIIDOC = @ASCIIDOC@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_LIBS = @BOOST_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFUTILITIES_CPPFLAGS = @CFUTILITIES_CPPFLAGS@
CFUTILITIES_LDFLAGS = @CFUTILITIES_LDFLAGS@
CFUTILITIES_LIBS = @CFUTILITIES_LIBS@
CFUTILITIES_SUBDIRS = @CFUTILITIES_SUBDIRS@
CF_CPPFLAGS = @CF_CPPFLAGS@
CF_LDFLAGS = @CF_LDFLAGS@
CF_LIBS = @CF_LIBS@
CLANG_FORMAT = @CLANG_FORMAT@
CMP = @CMP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_USE_DOT = @DOXYGEN_USE_DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GENHTML = @GENHTML@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
HLXSIMD_DEFAULT_CONFIG_PATH = @HLXSIMD_DEFAULT_CONFIG_PATH@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBOPENHLX_VERSION_AGE = @LIBOPENHLX_VERSION_AGE@
LIBOPENHLX_VERSION_CURRENT = @LIBOPENHLX_VERSION_CURRENT@
LIBOPENHLX_VERSION_INFO = @LIBOPENHLX_VERSION_INFO@
LIBOPENHLX_VERSION_REVISION = @LIBOPENHLX_VERSION_REVISION@
LIBS = @LIBS@
LIBTELNET_CPPFLAGS = @LIBTELNET_CPPFLAGS@
LIBTELNET_LDFLAGS = @LIBTELNET_LDFLAGS@
LIBTELNET_LIBS = @LIBTELNET_LIBS@
LIBTELNET_SUBDIRS = @LIBTELNET_SUBDIRS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOGUTILITIES_CPPFLAGS = @LOGUTILITIES_CPPFLAGS@
LOGUTILITIES_LDFLAGS = @LOGUTILITIES_LDFLAGS@
LOGUTILITIES_LIBS = @LOGUTILITIES_LIBS@
LOGUTILITIES_SUBDIRS = @LOGUTILITIES_SUBDIRS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NLASSERT_CPPFLAGS = @NLASSERT_CPPFLAGS@
NLASSERT_LDFLAGS = @NLASSERT_LDFLAGS@
NLASSERT_LIBS = @NLASSERT_LIBS@
NLASSERT_SUBDIRS = @NLASSERT_SUBDIRS@
NLUNIT_TEST_CPPFLAGS = @NLUNIT_TEST_CPPFLAGS@
NLUNIT_TEST_LDFLAGS = @NLUNIT_TEST_LDFLAGS@
NLUNIT_TEST_LIBS = @NLUNIT_TEST_LIBS@
NLUNIT_TEST_SUBDIRS = @NLUNIT_TEST_SUBDIRS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJCOPY = @OBJCOPY@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENHLX_CF_SOURCE = @OPENHLX_CF_SOURCE@
OPENHLX_CF_SOURCE_CFLITE = @OPENHLX_CF_SOURCE_CFLITE@
OPENHLX_CF_SOURCE_FRAMEWORK = @OPENHLX_CF_SOURCE_FRAMEWORK@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PRETTY = @PRETTY@
PRETTY_ARGS = @PRETTY_ARGS@
PRETTY_CHECK = @PRETTY_CHECK@
PRETTY_CHECK_ARGS = @PRETTY_CHECK_ARGS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRE_CPPFLAGS = @TRE_CPPFLAGS@
TRE_LDFLAGS = @TRE_LDFLAGS@
TRE_LIBS = @TRE_LIBS@
VERSION = @VERSION@
XMLTO = @XMLTO@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_nlbuild_autotools_dir = @abs_top_nlbuild_autotools_dir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nl_filtered_build = @nl_filtered_build@
nl_filtered_build_cpu = @nl_filtered_build_cpu@
nl_filtered_build_os = @nl_filtered_build_os@
nl_filtered_build_vendor = @nl_filtered_build_vendor@
nl_filtered_host = @nl_filtered_host@
nl_filtered_host_cpu = @nl_filtered_host_cpu@
nl_filtered_host_os = @nl_filtered_host_os@
nl_filtered_host_vendor = @nl_filtered_host_vendor@
nl_filtered_target = @nl_filtered_target@
nl_filtered_target_cpu = @nl_filtered_target_cpu@
nl_filtered_target_os = @nl_filtered_target_os@
nl_filtered_target_vendor = @nl_filtered_target_vendor@
nlbuild_autotools_stem = @nlbuild_autotools_stem@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = \
    libopenhlx-server.a                                       \
    $(NULL)

SUBDIRS = \
    tests                                                     \
    $(NULL)

noinst_HEADERS = \
    ConnectionSchemeIdentifierManager.hpp                     \
    $(NULL)


# The 'install' target directory transform. Headers in
# libopenhlx_server_a_include_HEADERS will get installed in
# libopenhlx_server_a_includedir.
libopenhlx_server_a_includedir = \
    ${includedir}/OpenHLX/Server


# Public library headers to distribute and install.
libopenhlx_server_a_include_HEADERS = \
    ApplicationControllerBasis.hpp                            \
    CommandBalanceResponseBasis.hpp                           \
    CommandEqualizerBandResponseBasis.hpp                     \
    CommandErrorResponse.hpp                                  \
    CommandManager.hpp                                        \
    CommandManagerDelegate.hpp                                \
    CommandNameSetResponseBasis.hpp                           \
    CommandPropertyResponseBases.hpp                          \
    CommandQueryResponseBasis.hpp                             \
    CommandRequestBasis.hpp                                   \
    CommandResponseBasis.hpp                                  \
    CommandSourceResponseBases.hpp                            \
    CommandVolumeResponseBases.hpp                            \
    ConfigurationControllerBasis.hpp                          \
    ConfigurationControllerCommands.hpp                       \
    ConnectionBasis.hpp                                       \
    ConnectionBasisDelegate.hpp                               \
    ConnectionFactory.hpp                                     \
    ConnectionManager.hpp                                     \
    ConnectionManagerDelegate.hpp                             \
    ConnectionTelnet.hpp                                      \
    EqualizerPresetsControllerBasis.hpp                       \
    EqualizerPresetsControllerCommands.hpp                    \
    FavoritesControllerBasis.hpp                              \
    FavoritesControllerCommands.hpp                           \
    FrontPanelControllerBasis.hpp                             \
    FrontPanelControllerCommands.hpp                          \
    GroupsControllerBasis.hpp                                 \
    GroupsControllerCommands.hpp                              \
    InfraredControllerBasis.hpp                               \
    InfraredControllerCommands.hpp                            \
    ListenerBasis.hpp                                         \
    ListenerBasisAcceptDelegate.hpp                           \
    ListenerBasisDelegate.hpp                                 \
    ListenerFactory.hpp                                       \
    ListenerTelnet.hpp                                        \
    NetworkControllerBasis.hpp                                \
    NetworkControllerCommands.hpp                             \
    ObjectControllerBasis.hpp                                 \
    SourcesControllerBasis.hpp                                \
    SourcesControllerCommands.hpp                             \
    ZonesControllerBasis.hpp                                  \
    ZonesControllerCommands.hpp                               \
    $(NULL)

libopenhlx_server_a_CPPFLAGS = \
    -I$(top_srcdir)/third_party/CFUtilities/repo/include      \
    -I$(top_srcdir)/third_party/LogUtilities/repo/include     \
    -I$(top_srcdir)/third_party/libtelnet/repo                \
    -I$(top_srcdir)/src/lib/common                            \
    -I$(top_srcdir)/src/lib/utilities                         \
    $(NULL)

libopenhlx_server_a_SOURCES = \
    ApplicationControllerBasis.cpp                            \
    CommandBalanceResponseBasis.cpp                           \
    CommandEqualizerBandResponseBasis.cpp                     \
    CommandErrorResponse.cpp                                  \
    CommandManager.cpp                                        \
    CommandNameSetResponseBasis.cpp                           \
    CommandPropertyResponseBases.cpp                          \
    CommandQueryResponseBasis.cpp                             \
    CommandRequestBasis.cpp                                   \
    CommandResponseBasis.cpp                                  \
    CommandSourceResponseBases.cpp                            \
    CommandVolumeResponseBases.cpp                            \
    ConfigurationControllerBasis.cpp                          \
    ConfigurationControllerCommands.cpp                       \
    ConnectionBasis.cpp                                       \
    ConnectionFactory.cpp                                     \
    ConnectionManager.cpp                                     \
    ConnectionSchemeIdentifierManager.cpp                     \
    ConnectionTelnet.cpp                                      \
    EqualizerPresetsControllerBasis.cpp                       \
    EqualizerPresetsControllerCommands.cpp                    \
    FavoritesControllerBasis.cpp                              \
    FavoritesControllerCommands.cpp                           \
    FrontPanelControllerBasis.cpp                             \
    FrontPanelControllerCommands.cpp                          \
    GroupsControllerBasis.cpp                                 \
    GroupsControllerCommands.cpp                              \
    InfraredControllerBasis.cpp                               \
    InfraredControllerCommands.cpp                            \
    ListenerBasis.cpp                                         \
    ListenerFactory.cpp                                       \
    ListenerTelnet.cpp                                        \
    NetworkControllerBasis.cpp                                \
    NetworkControllerCommands.cpp                             \
    ObjectControllerBasis.cpp                                 \
    SourcesControllerBasis.cpp                                \
    SourcesControllerCommands.cpp                             \
    ZonesControllerBasis.cpp                                  \
    ZonesControllerCommands.cpp                               \
    $(NULL)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/lib/server/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/lib/server/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libopenhlx-server.a: $(libopenhlx_server_a_OBJECTS) $(libopenhlx_server_a_DEPENDENCIES) $(EXTRA_libopenhlx_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libopenhlx-server.a
	$(AM_V_AR)$(libopenhlx_server_a_AR) libopenhlx-server.a $(libopenhlx_server_a_OBJECTS) $(libopenhlx_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libopenhlx-server.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandManager.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ConnectionManager.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ListenerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ListenerFactory.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libopenhlx_server_a-ApplicationControllerBasis.o: ApplicationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ApplicationControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Tpo -c -o libopenhlx_server_a-ApplicationControllerBasis.o `test -f 'ApplicationControllerBasis.cpp' || echo '$(srcdir)/'`ApplicationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ApplicationControllerBasis.cpp' object='libopenhlx_server_a-ApplicationControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ApplicationControllerBasis.o `test -f 'ApplicationControllerBasis.cpp' || echo '$(srcdir)/'`ApplicationControllerBasis.cpp

libopenhlx_server_a-ApplicationControllerBasis.obj: ApplicationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ApplicationControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Tpo -c -o libopenhlx_server_a-ApplicationControllerBasis.obj `if test -f 'ApplicationControllerBasis.cpp'; then $(CYGPATH_W) 'ApplicationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ApplicationControllerBasis.cpp' object='libopenhlx_server_a-ApplicationControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ApplicationControllerBasis.obj `if test -f 'ApplicationControllerBasis.cpp'; then $(CYGPATH_W) 'ApplicationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationControllerBasis.cpp'; fi`

libopenhlx_server_a-CommandBalanceResponseBasis.o: CommandBalanceResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandBalanceResponseBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Tpo -c -o libopenhlx_server_a-CommandBalanceResponseBasis.o `test -f 'CommandBalanceResponseBasis.cpp' || echo '$(srcdir)/'`CommandBalanceResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBalanceResponseBasis.cpp' object='libopenhlx_server_a-CommandBalanceResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandBalanceResponseBasis.o `test -f 'CommandBalanceResponseBasis.cpp' || echo '$(srcdir)/'`CommandBalanceResponseBasis.cpp

libopenhlx_server_a-CommandBalanceResponseBasis.obj: CommandBalanceResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandBalanceResponseBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Tpo -c -o libopenhlx_server_a-CommandBalanceResponseBasis.obj `if test -f 'CommandBalanceResponseBasis.cpp'; then $(CYGPATH_W) 'CommandBalanceResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBalanceResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBalanceResponseBasis.cpp' object='libopenhlx_server_a-CommandBalanceResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandBalanceResponseBasis.obj `if test -f 'CommandBalanceResponseBasis.cpp'; then $(CYGPATH_W) 'CommandBalanceResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBalanceResponseBasis.cpp'; fi`

libopenhlx_server_a-CommandEqualizerBandResponseBasis.o: CommandEqualizerBandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandEqualizerBandResponseBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Tpo -c -o libopenhlx_server_a-CommandEqualizerBandResponseBasis.o `test -f 'CommandEqualizerBandResponseBasis.cpp' || echo '$(srcdir)/'`CommandEqualizerBandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerBandResponseBasis.cpp' object='libopenhlx_server_a-CommandEqualizerBandResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandEqualizerBandResponseBasis.o `test -f 'CommandEqualizerBandResponseBasis.cpp' || echo '$(srcdir)/'`CommandEqualizerBandResponseBasis.cpp

libopenhlx_server_a-CommandEqualizerBandResponseBasis.obj: CommandEqualizerBandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandEqualizerBandResponseBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Tpo -c -o libopenhlx_server_a-CommandEqualizerBandResponseBasis.obj `if test -f 'CommandEqualizerBandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandEqualizerBandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerBandResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerBandResponseBasis.cpp' object='libopenhlx_server_a-CommandEqualizerBandResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandEqualizerBandResponseBasis.obj `if test -f 'CommandEqualizerBandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandEqualizerBandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerBandResponseBasis.cpp'; fi`

libopenhlx_server_a-CommandErrorResponse.o: CommandErrorResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandErrorResponse.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Tpo -c -o libopenhlx_server_a-CommandErrorResponse.o `test -f 'CommandErrorResponse.cpp' || echo '$(srcdir)/'`CommandErrorResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Tpo $(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandErrorResponse.cpp' object='libopenhlx_server_a-CommandErrorResponse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandErrorResponse.o `test -f 'CommandErrorResponse.cpp' || echo '$(srcdir)/'`CommandErrorResponse.cpp

libopenhlx_server_a-CommandErrorResponse.obj: CommandErrorResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandErrorResponse.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Tpo -c -o libopenhlx_server_a-CommandErrorResponse.obj `if test -f 'CommandErrorResponse.cpp'; then $(CYGPATH_W) 'CommandErrorResponse.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandErrorResponse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Tpo $(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandErrorResponse.cpp' object='libopenhlx_server_a-CommandErrorResponse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandErrorResponse.obj `if test -f 'CommandErrorResponse.cpp'; then $(CYGPATH_W) 'CommandErrorResponse.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandErrorResponse.cpp'; fi`

libopenhlx_server_a-CommandManager.o: CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandManager.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandManager.Tpo -c -o libopenhlx_server_a-CommandManager.o `test -f 'CommandManager.cpp' || echo '$(srcdir)/'`CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandManager.Tpo $(DEPDIR)/libopenhlx_server_a-CommandManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandManager.cpp' object='libopenhlx_server_a-CommandManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandManager.o `test -f 'CommandManager.cpp' || echo '$(srcdir)/'`CommandManager.cpp

libopenhlx_server_a-CommandManager.obj: CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandManager.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandManager.Tpo -c -o libopenhlx_server_a-CommandManager.obj `if test -f 'CommandManager.cpp'; then $(CYGPATH_W) 'CommandManager.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandManager.Tpo $(DEPDIR)/libopenhlx_server_a-CommandManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandManager.cpp' object='libopenhlx_server_a-CommandManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandManager.obj `if test -f 'CommandManager.cpp'; then $(CYGPATH_W) 'CommandManager.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandManager.cpp'; fi`

libopenhlx_server_a-CommandNameSetResponseBasis.o: CommandNameSetResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandNameSetResponseBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Tpo -c -o libopenhlx_server_a-CommandNameSetResponseBasis.o `test -f 'CommandNameSetResponseBasis.cpp' || echo '$(srcdir)/'`CommandNameSetResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNameSetResponseBasis.cpp' object='libopenhlx_server_a-CommandNameSetResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandNameSetResponseBasis.o `test -f 'CommandNameSetResponseBasis.cpp' || echo '$(srcdir)/'`CommandNameSetResponseBasis.cpp

libopenhlx_server_a-CommandNameSetResponseBasis.obj: CommandNameSetResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandNameSetResponseBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Tpo -c -o libopenhlx_server_a-CommandNameSetResponseBasis.obj `if test -f 'CommandNameSetResponseBasis.cpp'; then $(CYGPATH_W) 'CommandNameSetResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNameSetResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNameSetResponseBasis.cpp' object='libopenhlx_server_a-CommandNameSetResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandNameSetResponseBasis.obj `if test -f 'CommandNameSetResponseBasis.cpp'; then $(CYGPATH_W) 'CommandNameSetResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNameSetResponseBasis.cpp'; fi`

libopenhlx_server_a-CommandPropertyResponseBases.o: CommandPropertyResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandPropertyResponseBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Tpo -c -o libopenhlx_server_a-CommandPropertyResponseBases.o `test -f 'CommandPropertyResponseBases.cpp' || echo '$(srcdir)/'`CommandPropertyResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Tpo $(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandPropertyResponseBases.cpp' object='libopenhlx_server_a-CommandPropertyResponseBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandPropertyResponseBases.o `test -f 'CommandPropertyResponseBases.cpp' || echo '$(srcdir)/'`CommandPropertyResponseBases.cpp

libopenhlx_server_a-CommandPropertyResponseBases.obj: CommandPropertyResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandPropertyResponseBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Tpo -c -o libopenhlx_server_a-CommandPropertyResponseBases.obj `if test -f 'CommandPropertyResponseBases.cpp'; then $(CYGPATH_W) 'CommandPropertyResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandPropertyResponseBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Tpo $(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandPropertyResponseBases.cpp' object='libopenhlx_server_a-CommandPropertyResponseBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandPropertyResponseBases.obj `if test -f 'CommandPropertyResponseBases.cpp'; then $(CYGPATH_W) 'CommandPropertyResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandPropertyResponseBases.cpp'; fi`

libopenhlx_server_a-CommandQueryResponseBasis.o: CommandQueryResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandQueryResponseBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Tpo -c -o libopenhlx_server_a-CommandQueryResponseBasis.o `test -f 'CommandQueryResponseBasis.cpp' || echo '$(srcdir)/'`CommandQueryResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandQueryResponseBasis.cpp' object='libopenhlx_server_a-CommandQueryResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandQueryResponseBasis.o `test -f 'CommandQueryResponseBasis.cpp' || echo '$(srcdir)/'`CommandQueryResponseBasis.cpp

libopenhlx_server_a-CommandQueryResponseBasis.obj: CommandQueryResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandQueryResponseBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Tpo -c -o libopenhlx_server_a-CommandQueryResponseBasis.obj `if test -f 'CommandQueryResponseBasis.cpp'; then $(CYGPATH_W) 'CommandQueryResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueryResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandQueryResponseBasis.cpp' object='libopenhlx_server_a-CommandQueryResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandQueryResponseBasis.obj `if test -f 'CommandQueryResponseBasis.cpp'; then $(CYGPATH_W) 'CommandQueryResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueryResponseBasis.cpp'; fi`

libopenhlx_server_a-CommandRequestBasis.o: CommandRequestBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandRequestBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Tpo -c -o libopenhlx_server_a-CommandRequestBasis.o `test -f 'CommandRequestBasis.cpp' || echo '$(srcdir)/'`CommandRequestBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRequestBasis.cpp' object='libopenhlx_server_a-CommandRequestBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandRequestBasis.o `test -f 'CommandRequestBasis.cpp' || echo '$(srcdir)/'`CommandRequestBasis.cpp

libopenhlx_server_a-CommandRequestBasis.obj: CommandRequestBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandRequestBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Tpo -c -o libopenhlx_server_a-CommandRequestBasis.obj `if test -f 'CommandRequestBasis.cpp'; then $(CYGPATH_W) 'CommandRequestBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRequestBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRequestBasis.cpp' object='libopenhlx_server_a-CommandRequestBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandRequestBasis.obj `if test -f 'CommandRequestBasis.cpp'; then $(CYGPATH_W) 'CommandRequestBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRequestBasis.cpp'; fi`

libopenhlx_server_a-CommandResponseBasis.o: CommandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandResponseBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Tpo -c -o libopenhlx_server_a-CommandResponseBasis.o `test -f 'CommandResponseBasis.cpp' || echo '$(srcdir)/'`CommandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandResponseBasis.cpp' object='libopenhlx_server_a-CommandResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandResponseBasis.o `test -f 'CommandResponseBasis.cpp' || echo '$(srcdir)/'`CommandResponseBasis.cpp

libopenhlx_server_a-CommandResponseBasis.obj: CommandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandResponseBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Tpo -c -o libopenhlx_server_a-CommandResponseBasis.obj `if test -f 'CommandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Tpo $(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandResponseBasis.cpp' object='libopenhlx_server_a-CommandResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandResponseBasis.obj `if test -f 'CommandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandResponseBasis.cpp'; fi`

libopenhlx_server_a-CommandSourceResponseBases.o: CommandSourceResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandSourceResponseBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Tpo -c -o libopenhlx_server_a-CommandSourceResponseBases.o `test -f 'CommandSourceResponseBases.cpp' || echo '$(srcdir)/'`CommandSourceResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Tpo $(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourceResponseBases.cpp' object='libopenhlx_server_a-CommandSourceResponseBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandSourceResponseBases.o `test -f 'CommandSourceResponseBases.cpp' || echo '$(srcdir)/'`CommandSourceResponseBases.cpp

libopenhlx_server_a-CommandSourceResponseBases.obj: CommandSourceResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandSourceResponseBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Tpo -c -o libopenhlx_server_a-CommandSourceResponseBases.obj `if test -f 'CommandSourceResponseBases.cpp'; then $(CYGPATH_W) 'CommandSourceResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourceResponseBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Tpo $(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourceResponseBases.cpp' object='libopenhlx_server_a-CommandSourceResponseBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandSourceResponseBases.obj `if test -f 'CommandSourceResponseBases.cpp'; then $(CYGPATH_W) 'CommandSourceResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourceResponseBases.cpp'; fi`

libopenhlx_server_a-CommandVolumeResponseBases.o: CommandVolumeResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandVolumeResponseBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Tpo -c -o libopenhlx_server_a-CommandVolumeResponseBases.o `test -f 'CommandVolumeResponseBases.cpp' || echo '$(srcdir)/'`CommandVolumeResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Tpo $(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandVolumeResponseBases.cpp' object='libopenhlx_server_a-CommandVolumeResponseBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandVolumeResponseBases.o `test -f 'CommandVolumeResponseBases.cpp' || echo '$(srcdir)/'`CommandVolumeResponseBases.cpp

libopenhlx_server_a-CommandVolumeResponseBases.obj: CommandVolumeResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-CommandVolumeResponseBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Tpo -c -o libopenhlx_server_a-CommandVolumeResponseBases.obj `if test -f 'CommandVolumeResponseBases.cpp'; then $(CYGPATH_W) 'CommandVolumeResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandVolumeResponseBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Tpo $(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandVolumeResponseBases.cpp' object='libopenhlx_server_a-CommandVolumeResponseBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-CommandVolumeResponseBases.obj `if test -f 'CommandVolumeResponseBases.cpp'; then $(CYGPATH_W) 'CommandVolumeResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandVolumeResponseBases.cpp'; fi`

libopenhlx_server_a-ConfigurationControllerBasis.o: ConfigurationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConfigurationControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Tpo -c -o libopenhlx_server_a-ConfigurationControllerBasis.o `test -f 'ConfigurationControllerBasis.cpp' || echo '$(srcdir)/'`ConfigurationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerBasis.cpp' object='libopenhlx_server_a-ConfigurationControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConfigurationControllerBasis.o `test -f 'ConfigurationControllerBasis.cpp' || echo '$(srcdir)/'`ConfigurationControllerBasis.cpp

libopenhlx_server_a-ConfigurationControllerBasis.obj: ConfigurationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConfigurationControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Tpo -c -o libopenhlx_server_a-ConfigurationControllerBasis.obj `if test -f 'ConfigurationControllerBasis.cpp'; then $(CYGPATH_W) 'ConfigurationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerBasis.cpp' object='libopenhlx_server_a-ConfigurationControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConfigurationControllerBasis.obj `if test -f 'ConfigurationControllerBasis.cpp'; then $(CYGPATH_W) 'ConfigurationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerBasis.cpp'; fi`

libopenhlx_server_a-ConfigurationControllerCommands.o: ConfigurationControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConfigurationControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Tpo -c -o libopenhlx_server_a-ConfigurationControllerCommands.o `test -f 'ConfigurationControllerCommands.cpp' || echo '$(srcdir)/'`ConfigurationControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerCommands.cpp' object='libopenhlx_server_a-ConfigurationControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConfigurationControllerCommands.o `test -f 'ConfigurationControllerCommands.cpp' || echo '$(srcdir)/'`ConfigurationControllerCommands.cpp

libopenhlx_server_a-ConfigurationControllerCommands.obj: ConfigurationControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConfigurationControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Tpo -c -o libopenhlx_server_a-ConfigurationControllerCommands.obj `if test -f 'ConfigurationControllerCommands.cpp'; then $(CYGPATH_W) 'ConfigurationControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerCommands.cpp' object='libopenhlx_server_a-ConfigurationControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConfigurationControllerCommands.obj `if test -f 'ConfigurationControllerCommands.cpp'; then $(CYGPATH_W) 'ConfigurationControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerCommands.cpp'; fi`

libopenhlx_server_a-ConnectionBasis.o: ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Tpo -c -o libopenhlx_server_a-ConnectionBasis.o `test -f 'ConnectionBasis.cpp' || echo '$(srcdir)/'`ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasis.cpp' object='libopenhlx_server_a-ConnectionBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionBasis.o `test -f 'ConnectionBasis.cpp' || echo '$(srcdir)/'`ConnectionBasis.cpp

libopenhlx_server_a-ConnectionBasis.obj: ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Tpo -c -o libopenhlx_server_a-ConnectionBasis.obj `if test -f 'ConnectionBasis.cpp'; then $(CYGPATH_W) 'ConnectionBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasis.cpp' object='libopenhlx_server_a-ConnectionBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionBasis.obj `if test -f 'ConnectionBasis.cpp'; then $(CYGPATH_W) 'ConnectionBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasis.cpp'; fi`

libopenhlx_server_a-ConnectionFactory.o: ConnectionFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionFactory.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Tpo -c -o libopenhlx_server_a-ConnectionFactory.o `test -f 'ConnectionFactory.cpp' || echo '$(srcdir)/'`ConnectionFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionFactory.cpp' object='libopenhlx_server_a-ConnectionFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionFactory.o `test -f 'ConnectionFactory.cpp' || echo '$(srcdir)/'`ConnectionFactory.cpp

libopenhlx_server_a-ConnectionFactory.obj: ConnectionFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionFactory.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Tpo -c -o libopenhlx_server_a-ConnectionFactory.obj `if test -f 'ConnectionFactory.cpp'; then $(CYGPATH_W) 'ConnectionFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionFactory.cpp' object='libopenhlx_server_a-ConnectionFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionFactory.obj `if test -f 'ConnectionFactory.cpp'; then $(CYGPATH_W) 'ConnectionFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionFactory.cpp'; fi`

libopenhlx_server_a-ConnectionManager.o: ConnectionManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionManager.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionManager.Tpo -c -o libopenhlx_server_a-ConnectionManager.o `test -f 'ConnectionManager.cpp' || echo '$(srcdir)/'`ConnectionManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionManager.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionManager.cpp' object='libopenhlx_server_a-ConnectionManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionManager.o `test -f 'ConnectionManager.cpp' || echo '$(srcdir)/'`ConnectionManager.cpp

libopenhlx_server_a-ConnectionManager.obj: ConnectionManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionManager.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionManager.Tpo -c -o libopenhlx_server_a-ConnectionManager.obj `if test -f 'ConnectionManager.cpp'; then $(CYGPATH_W) 'ConnectionManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionManager.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionManager.cpp' object='libopenhlx_server_a-ConnectionManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionManager.obj `if test -f 'ConnectionManager.cpp'; then $(CYGPATH_W) 'ConnectionManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManager.cpp'; fi`

libopenhlx_server_a-ConnectionSchemeIdentifierManager.o: ConnectionSchemeIdentifierManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionSchemeIdentifierManager.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Tpo -c -o libopenhlx_server_a-ConnectionSchemeIdentifierManager.o `test -f 'ConnectionSchemeIdentifierManager.cpp' || echo '$(srcdir)/'`ConnectionSchemeIdentifierManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionSchemeIdentifierManager.cpp' object='libopenhlx_server_a-ConnectionSchemeIdentifierManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionSchemeIdentifierManager.o `test -f 'ConnectionSchemeIdentifierManager.cpp' || echo '$(srcdir)/'`ConnectionSchemeIdentifierManager.cpp

libopenhlx_server_a-ConnectionSchemeIdentifierManager.obj: ConnectionSchemeIdentifierManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionSchemeIdentifierManager.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Tpo -c -o libopenhlx_server_a-ConnectionSchemeIdentifierManager.obj `if test -f 'ConnectionSchemeIdentifierManager.cpp'; then $(CYGPATH_W) 'ConnectionSchemeIdentifierManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionSchemeIdentifierManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionSchemeIdentifierManager.cpp' object='libopenhlx_server_a-ConnectionSchemeIdentifierManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionSchemeIdentifierManager.obj `if test -f 'ConnectionSchemeIdentifierManager.cpp'; then $(CYGPATH_W) 'ConnectionSchemeIdentifierManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionSchemeIdentifierManager.cpp'; fi`

libopenhlx_server_a-ConnectionTelnet.o: ConnectionTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionTelnet.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Tpo -c -o libopenhlx_server_a-ConnectionTelnet.o `test -f 'ConnectionTelnet.cpp' || echo '$(srcdir)/'`ConnectionTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionTelnet.cpp' object='libopenhlx_server_a-ConnectionTelnet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionTelnet.o `test -f 'ConnectionTelnet.cpp' || echo '$(srcdir)/'`ConnectionTelnet.cpp

libopenhlx_server_a-ConnectionTelnet.obj: ConnectionTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ConnectionTelnet.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Tpo -c -o libopenhlx_server_a-ConnectionTelnet.obj `if test -f 'ConnectionTelnet.cpp'; then $(CYGPATH_W) 'ConnectionTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionTelnet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Tpo $(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionTelnet.cpp' object='libopenhlx_server_a-ConnectionTelnet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ConnectionTelnet.obj `if test -f 'ConnectionTelnet.cpp'; then $(CYGPATH_W) 'ConnectionTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionTelnet.cpp'; fi`

libopenhlx_server_a-EqualizerPresetsControllerBasis.o: EqualizerPresetsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-EqualizerPresetsControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Tpo -c -o libopenhlx_server_a-EqualizerPresetsControllerBasis.o `test -f 'EqualizerPresetsControllerBasis.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerBasis.cpp' object='libopenhlx_server_a-EqualizerPresetsControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-EqualizerPresetsControllerBasis.o `test -f 'EqualizerPresetsControllerBasis.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerBasis.cpp

libopenhlx_server_a-EqualizerPresetsControllerBasis.obj: EqualizerPresetsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-EqualizerPresetsControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Tpo -c -o libopenhlx_server_a-EqualizerPresetsControllerBasis.obj `if test -f 'EqualizerPresetsControllerBasis.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerBasis.cpp' object='libopenhlx_server_a-EqualizerPresetsControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-EqualizerPresetsControllerBasis.obj `if test -f 'EqualizerPresetsControllerBasis.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerBasis.cpp'; fi`

libopenhlx_server_a-EqualizerPresetsControllerCommands.o: EqualizerPresetsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-EqualizerPresetsControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Tpo -c -o libopenhlx_server_a-EqualizerPresetsControllerCommands.o `test -f 'EqualizerPresetsControllerCommands.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerCommands.cpp' object='libopenhlx_server_a-EqualizerPresetsControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-EqualizerPresetsControllerCommands.o `test -f 'EqualizerPresetsControllerCommands.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerCommands.cpp

libopenhlx_server_a-EqualizerPresetsControllerCommands.obj: EqualizerPresetsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-EqualizerPresetsControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Tpo -c -o libopenhlx_server_a-EqualizerPresetsControllerCommands.obj `if test -f 'EqualizerPresetsControllerCommands.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerCommands.cpp' object='libopenhlx_server_a-EqualizerPresetsControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-EqualizerPresetsControllerCommands.obj `if test -f 'EqualizerPresetsControllerCommands.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerCommands.cpp'; fi`

libopenhlx_server_a-FavoritesControllerBasis.o: FavoritesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FavoritesControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Tpo -c -o libopenhlx_server_a-FavoritesControllerBasis.o `test -f 'FavoritesControllerBasis.cpp' || echo '$(srcdir)/'`FavoritesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerBasis.cpp' object='libopenhlx_server_a-FavoritesControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FavoritesControllerBasis.o `test -f 'FavoritesControllerBasis.cpp' || echo '$(srcdir)/'`FavoritesControllerBasis.cpp

libopenhlx_server_a-FavoritesControllerBasis.obj: FavoritesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FavoritesControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Tpo -c -o libopenhlx_server_a-FavoritesControllerBasis.obj `if test -f 'FavoritesControllerBasis.cpp'; then $(CYGPATH_W) 'FavoritesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerBasis.cpp' object='libopenhlx_server_a-FavoritesControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FavoritesControllerBasis.obj `if test -f 'FavoritesControllerBasis.cpp'; then $(CYGPATH_W) 'FavoritesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerBasis.cpp'; fi`

libopenhlx_server_a-FavoritesControllerCommands.o: FavoritesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FavoritesControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Tpo -c -o libopenhlx_server_a-FavoritesControllerCommands.o `test -f 'FavoritesControllerCommands.cpp' || echo '$(srcdir)/'`FavoritesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerCommands.cpp' object='libopenhlx_server_a-FavoritesControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FavoritesControllerCommands.o `test -f 'FavoritesControllerCommands.cpp' || echo '$(srcdir)/'`FavoritesControllerCommands.cpp

libopenhlx_server_a-FavoritesControllerCommands.obj: FavoritesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FavoritesControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Tpo -c -o libopenhlx_server_a-FavoritesControllerCommands.obj `if test -f 'FavoritesControllerCommands.cpp'; then $(CYGPATH_W) 'FavoritesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerCommands.cpp' object='libopenhlx_server_a-FavoritesControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FavoritesControllerCommands.obj `if test -f 'FavoritesControllerCommands.cpp'; then $(CYGPATH_W) 'FavoritesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerCommands.cpp'; fi`

libopenhlx_server_a-FrontPanelControllerBasis.o: FrontPanelControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FrontPanelControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Tpo -c -o libopenhlx_server_a-FrontPanelControllerBasis.o `test -f 'FrontPanelControllerBasis.cpp' || echo '$(srcdir)/'`FrontPanelControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerBasis.cpp' object='libopenhlx_server_a-FrontPanelControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FrontPanelControllerBasis.o `test -f 'FrontPanelControllerBasis.cpp' || echo '$(srcdir)/'`FrontPanelControllerBasis.cpp

libopenhlx_server_a-FrontPanelControllerBasis.obj: FrontPanelControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FrontPanelControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Tpo -c -o libopenhlx_server_a-FrontPanelControllerBasis.obj `if test -f 'FrontPanelControllerBasis.cpp'; then $(CYGPATH_W) 'FrontPanelControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerBasis.cpp' object='libopenhlx_server_a-FrontPanelControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FrontPanelControllerBasis.obj `if test -f 'FrontPanelControllerBasis.cpp'; then $(CYGPATH_W) 'FrontPanelControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerBasis.cpp'; fi`

libopenhlx_server_a-FrontPanelControllerCommands.o: FrontPanelControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FrontPanelControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Tpo -c -o libopenhlx_server_a-FrontPanelControllerCommands.o `test -f 'FrontPanelControllerCommands.cpp' || echo '$(srcdir)/'`FrontPanelControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerCommands.cpp' object='libopenhlx_server_a-FrontPanelControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FrontPanelControllerCommands.o `test -f 'FrontPanelControllerCommands.cpp' || echo '$(srcdir)/'`FrontPanelControllerCommands.cpp

libopenhlx_server_a-FrontPanelControllerCommands.obj: FrontPanelControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-FrontPanelControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Tpo -c -o libopenhlx_server_a-FrontPanelControllerCommands.obj `if test -f 'FrontPanelControllerCommands.cpp'; then $(CYGPATH_W) 'FrontPanelControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerCommands.cpp' object='libopenhlx_server_a-FrontPanelControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-FrontPanelControllerCommands.obj `if test -f 'FrontPanelControllerCommands.cpp'; then $(CYGPATH_W) 'FrontPanelControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerCommands.cpp'; fi`

libopenhlx_server_a-GroupsControllerBasis.o: GroupsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-GroupsControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Tpo -c -o libopenhlx_server_a-GroupsControllerBasis.o `test -f 'GroupsControllerBasis.cpp' || echo '$(srcdir)/'`GroupsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerBasis.cpp' object='libopenhlx_server_a-GroupsControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-GroupsControllerBasis.o `test -f 'GroupsControllerBasis.cpp' || echo '$(srcdir)/'`GroupsControllerBasis.cpp

libopenhlx_server_a-GroupsControllerBasis.obj: GroupsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-GroupsControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Tpo -c -o libopenhlx_server_a-GroupsControllerBasis.obj `if test -f 'GroupsControllerBasis.cpp'; then $(CYGPATH_W) 'GroupsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerBasis.cpp' object='libopenhlx_server_a-GroupsControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-GroupsControllerBasis.obj `if test -f 'GroupsControllerBasis.cpp'; then $(CYGPATH_W) 'GroupsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerBasis.cpp'; fi`

libopenhlx_server_a-GroupsControllerCommands.o: GroupsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-GroupsControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Tpo -c -o libopenhlx_server_a-GroupsControllerCommands.o `test -f 'GroupsControllerCommands.cpp' || echo '$(srcdir)/'`GroupsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerCommands.cpp' object='libopenhlx_server_a-GroupsControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-GroupsControllerCommands.o `test -f 'GroupsControllerCommands.cpp' || echo '$(srcdir)/'`GroupsControllerCommands.cpp

libopenhlx_server_a-GroupsControllerCommands.obj: GroupsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-GroupsControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Tpo -c -o libopenhlx_server_a-GroupsControllerCommands.obj `if test -f 'GroupsControllerCommands.cpp'; then $(CYGPATH_W) 'GroupsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerCommands.cpp' object='libopenhlx_server_a-GroupsControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-GroupsControllerCommands.obj `if test -f 'GroupsControllerCommands.cpp'; then $(CYGPATH_W) 'GroupsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerCommands.cpp'; fi`

libopenhlx_server_a-InfraredControllerBasis.o: InfraredControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-InfraredControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Tpo -c -o libopenhlx_server_a-InfraredControllerBasis.o `test -f 'InfraredControllerBasis.cpp' || echo '$(srcdir)/'`InfraredControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerBasis.cpp' object='libopenhlx_server_a-InfraredControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-InfraredControllerBasis.o `test -f 'InfraredControllerBasis.cpp' || echo '$(srcdir)/'`InfraredControllerBasis.cpp

libopenhlx_server_a-InfraredControllerBasis.obj: InfraredControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-InfraredControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Tpo -c -o libopenhlx_server_a-InfraredControllerBasis.obj `if test -f 'InfraredControllerBasis.cpp'; then $(CYGPATH_W) 'InfraredControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerBasis.cpp' object='libopenhlx_server_a-InfraredControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-InfraredControllerBasis.obj `if test -f 'InfraredControllerBasis.cpp'; then $(CYGPATH_W) 'InfraredControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerBasis.cpp'; fi`

libopenhlx_server_a-InfraredControllerCommands.o: InfraredControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-InfraredControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Tpo -c -o libopenhlx_server_a-InfraredControllerCommands.o `test -f 'InfraredControllerCommands.cpp' || echo '$(srcdir)/'`InfraredControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerCommands.cpp' object='libopenhlx_server_a-InfraredControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-InfraredControllerCommands.o `test -f 'InfraredControllerCommands.cpp' || echo '$(srcdir)/'`InfraredControllerCommands.cpp

libopenhlx_server_a-InfraredControllerCommands.obj: InfraredControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-InfraredControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Tpo -c -o libopenhlx_server_a-InfraredControllerCommands.obj `if test -f 'InfraredControllerCommands.cpp'; then $(CYGPATH_W) 'InfraredControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerCommands.cpp' object='libopenhlx_server_a-InfraredControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-InfraredControllerCommands.obj `if test -f 'InfraredControllerCommands.cpp'; then $(CYGPATH_W) 'InfraredControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerCommands.cpp'; fi`

libopenhlx_server_a-ListenerBasis.o: ListenerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ListenerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ListenerBasis.Tpo -c -o libopenhlx_server_a-ListenerBasis.o `test -f 'ListenerBasis.cpp' || echo '$(srcdir)/'`ListenerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ListenerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ListenerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerBasis.cpp' object='libopenhlx_server_a-ListenerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ListenerBasis.o `test -f 'ListenerBasis.cpp' || echo '$(srcdir)/'`ListenerBasis.cpp

libopenhlx_server_a-ListenerBasis.obj: ListenerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ListenerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ListenerBasis.Tpo -c -o libopenhlx_server_a-ListenerBasis.obj `if test -f 'ListenerBasis.cpp'; then $(CYGPATH_W) 'ListenerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ListenerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ListenerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerBasis.cpp' object='libopenhlx_server_a-ListenerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ListenerBasis.obj `if test -f 'ListenerBasis.cpp'; then $(CYGPATH_W) 'ListenerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerBasis.cpp'; fi`

libopenhlx_server_a-ListenerFactory.o: ListenerFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ListenerFactory.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ListenerFactory.Tpo -c -o libopenhlx_server_a-ListenerFactory.o `test -f 'ListenerFactory.cpp' || echo '$(srcdir)/'`ListenerFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ListenerFactory.Tpo $(DEPDIR)/libopenhlx_server_a-ListenerFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerFactory.cpp' object='libopenhlx_server_a-ListenerFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ListenerFactory.o `test -f 'ListenerFactory.cpp' || echo '$(srcdir)/'`ListenerFactory.cpp

libopenhlx_server_a-ListenerFactory.obj: ListenerFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ListenerFactory.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ListenerFactory.Tpo -c -o libopenhlx_server_a-ListenerFactory.obj `if test -f 'ListenerFactory.cpp'; then $(CYGPATH_W) 'ListenerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ListenerFactory.Tpo $(DEPDIR)/libopenhlx_server_a-ListenerFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerFactory.cpp' object='libopenhlx_server_a-ListenerFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ListenerFactory.obj `if test -f 'ListenerFactory.cpp'; then $(CYGPATH_W) 'ListenerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerFactory.cpp'; fi`

libopenhlx_server_a-ListenerTelnet.o: ListenerTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ListenerTelnet.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Tpo -c -o libopenhlx_server_a-ListenerTelnet.o `test -f 'ListenerTelnet.cpp' || echo '$(srcdir)/'`ListenerTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Tpo $(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerTelnet.cpp' object='libopenhlx_server_a-ListenerTelnet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ListenerTelnet.o `test -f 'ListenerTelnet.cpp' || echo '$(srcdir)/'`ListenerTelnet.cpp

libopenhlx_server_a-ListenerTelnet.obj: ListenerTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ListenerTelnet.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Tpo -c -o libopenhlx_server_a-ListenerTelnet.obj `if test -f 'ListenerTelnet.cpp'; then $(CYGPATH_W) 'ListenerTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerTelnet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Tpo $(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerTelnet.cpp' object='libopenhlx_server_a-ListenerTelnet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ListenerTelnet.obj `if test -f 'ListenerTelnet.cpp'; then $(CYGPATH_W) 'ListenerTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerTelnet.cpp'; fi`

libopenhlx_server_a-NetworkControllerBasis.o: NetworkControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-NetworkControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Tpo -c -o libopenhlx_server_a-NetworkControllerBasis.o `test -f 'NetworkControllerBasis.cpp' || echo '$(srcdir)/'`NetworkControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerBasis.cpp' object='libopenhlx_server_a-NetworkControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-NetworkControllerBasis.o `test -f 'NetworkControllerBasis.cpp' || echo '$(srcdir)/'`NetworkControllerBasis.cpp

libopenhlx_server_a-NetworkControllerBasis.obj: NetworkControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-NetworkControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Tpo -c -o libopenhlx_server_a-NetworkControllerBasis.obj `if test -f 'NetworkControllerBasis.cpp'; then $(CYGPATH_W) 'NetworkControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerBasis.cpp' object='libopenhlx_server_a-NetworkControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-NetworkControllerBasis.obj `if test -f 'NetworkControllerBasis.cpp'; then $(CYGPATH_W) 'NetworkControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerBasis.cpp'; fi`

libopenhlx_server_a-NetworkControllerCommands.o: NetworkControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-NetworkControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Tpo -c -o libopenhlx_server_a-NetworkControllerCommands.o `test -f 'NetworkControllerCommands.cpp' || echo '$(srcdir)/'`NetworkControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerCommands.cpp' object='libopenhlx_server_a-NetworkControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-NetworkControllerCommands.o `test -f 'NetworkControllerCommands.cpp' || echo '$(srcdir)/'`NetworkControllerCommands.cpp

libopenhlx_server_a-NetworkControllerCommands.obj: NetworkControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-NetworkControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Tpo -c -o libopenhlx_server_a-NetworkControllerCommands.obj `if test -f 'NetworkControllerCommands.cpp'; then $(CYGPATH_W) 'NetworkControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerCommands.cpp' object='libopenhlx_server_a-NetworkControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-NetworkControllerCommands.obj `if test -f 'NetworkControllerCommands.cpp'; then $(CYGPATH_W) 'NetworkControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerCommands.cpp'; fi`

libopenhlx_server_a-ObjectControllerBasis.o: ObjectControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ObjectControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Tpo -c -o libopenhlx_server_a-ObjectControllerBasis.o `test -f 'ObjectControllerBasis.cpp' || echo '$(srcdir)/'`ObjectControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ObjectControllerBasis.cpp' object='libopenhlx_server_a-ObjectControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ObjectControllerBasis.o `test -f 'ObjectControllerBasis.cpp' || echo '$(srcdir)/'`ObjectControllerBasis.cpp

libopenhlx_server_a-ObjectControllerBasis.obj: ObjectControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ObjectControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Tpo -c -o libopenhlx_server_a-ObjectControllerBasis.obj `if test -f 'ObjectControllerBasis.cpp'; then $(CYGPATH_W) 'ObjectControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ObjectControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ObjectControllerBasis.cpp' object='libopenhlx_server_a-ObjectControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ObjectControllerBasis.obj `if test -f 'ObjectControllerBasis.cpp'; then $(CYGPATH_W) 'ObjectControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ObjectControllerBasis.cpp'; fi`

libopenhlx_server_a-SourcesControllerBasis.o: SourcesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-SourcesControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Tpo -c -o libopenhlx_server_a-SourcesControllerBasis.o `test -f 'SourcesControllerBasis.cpp' || echo '$(srcdir)/'`SourcesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerBasis.cpp' object='libopenhlx_server_a-SourcesControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-SourcesControllerBasis.o `test -f 'SourcesControllerBasis.cpp' || echo '$(srcdir)/'`SourcesControllerBasis.cpp

libopenhlx_server_a-SourcesControllerBasis.obj: SourcesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-SourcesControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Tpo -c -o libopenhlx_server_a-SourcesControllerBasis.obj `if test -f 'SourcesControllerBasis.cpp'; then $(CYGPATH_W) 'SourcesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerBasis.cpp' object='libopenhlx_server_a-SourcesControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-SourcesControllerBasis.obj `if test -f 'SourcesControllerBasis.cpp'; then $(CYGPATH_W) 'SourcesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerBasis.cpp'; fi`

libopenhlx_server_a-SourcesControllerCommands.o: SourcesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-SourcesControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Tpo -c -o libopenhlx_server_a-SourcesControllerCommands.o `test -f 'SourcesControllerCommands.cpp' || echo '$(srcdir)/'`SourcesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerCommands.cpp' object='libopenhlx_server_a-SourcesControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-SourcesControllerCommands.o `test -f 'SourcesControllerCommands.cpp' || echo '$(srcdir)/'`SourcesControllerCommands.cpp

libopenhlx_server_a-SourcesControllerCommands.obj: SourcesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-SourcesControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Tpo -c -o libopenhlx_server_a-SourcesControllerCommands.obj `if test -f 'SourcesControllerCommands.cpp'; then $(CYGPATH_W) 'SourcesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerCommands.cpp' object='libopenhlx_server_a-SourcesControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-SourcesControllerCommands.obj `if test -f 'SourcesControllerCommands.cpp'; then $(CYGPATH_W) 'SourcesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerCommands.cpp'; fi`

libopenhlx_server_a-ZonesControllerBasis.o: ZonesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ZonesControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Tpo -c -o libopenhlx_server_a-ZonesControllerBasis.o `test -f 'ZonesControllerBasis.cpp' || echo '$(srcdir)/'`ZonesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerBasis.cpp' object='libopenhlx_server_a-ZonesControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ZonesControllerBasis.o `test -f 'ZonesControllerBasis.cpp' || echo '$(srcdir)/'`ZonesControllerBasis.cpp

libopenhlx_server_a-ZonesControllerBasis.obj: ZonesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ZonesControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Tpo -c -o libopenhlx_server_a-ZonesControllerBasis.obj `if test -f 'ZonesControllerBasis.cpp'; then $(CYGPATH_W) 'ZonesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Tpo $(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerBasis.cpp' object='libopenhlx_server_a-ZonesControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ZonesControllerBasis.obj `if test -f 'ZonesControllerBasis.cpp'; then $(CYGPATH_W) 'ZonesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerBasis.cpp'; fi`

libopenhlx_server_a-ZonesControllerCommands.o: ZonesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ZonesControllerCommands.o -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Tpo -c -o libopenhlx_server_a-ZonesControllerCommands.o `test -f 'ZonesControllerCommands.cpp' || echo '$(srcdir)/'`ZonesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerCommands.cpp' object='libopenhlx_server_a-ZonesControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ZonesControllerCommands.o `test -f 'ZonesControllerCommands.cpp' || echo '$(srcdir)/'`ZonesControllerCommands.cpp

libopenhlx_server_a-ZonesControllerCommands.obj: ZonesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_server_a-ZonesControllerCommands.obj -MD -MP -MF $(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Tpo -c -o libopenhlx_server_a-ZonesControllerCommands.obj `if test -f 'ZonesControllerCommands.cpp'; then $(CYGPATH_W) 'ZonesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Tpo $(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerCommands.cpp' object='libopenhlx_server_a-ZonesControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_server_a-ZonesControllerCommands.obj `if test -f 'ZonesControllerCommands.cpp'; then $(CYGPATH_W) 'ZonesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerCommands.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libopenhlx_server_a_includeHEADERS: $(libopenhlx_server_a_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libopenhlx_server_a_include_HEADERS)'; test -n "$(libopenhlx_server_a_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libopenhlx_server_a_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libopenhlx_server_a_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libopenhlx_server_a_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libopenhlx_server_a_includedir)" || exit $$?; \
	done

uninstall-libopenhlx_server_a_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libopenhlx_server_a_include_HEADERS)'; test -n "$(libopenhlx_server_a_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libopenhlx_server_a_includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libopenhlx_server_a_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandManager.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionManager.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ListenerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ListenerFactory.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-libopenhlx_server_a_includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/libopenhlx_server_a-ApplicationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandBalanceResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandEqualizerBandResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandErrorResponse.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandManager.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandNameSetResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandPropertyResponseBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandQueryResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandRequestBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandResponseBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandSourceResponseBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-CommandVolumeResponseBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConfigurationControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionFactory.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionManager.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionSchemeIdentifierManager.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ConnectionTelnet.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-EqualizerPresetsControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FavoritesControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-FrontPanelControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-GroupsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-GroupsControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-InfraredControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-InfraredControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ListenerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ListenerFactory.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ListenerTelnet.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-NetworkControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-NetworkControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ObjectControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-SourcesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-SourcesControllerCommands.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ZonesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_server_a-ZonesControllerCommands.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libLIBRARIES \
	uninstall-libopenhlx_server_a_includeHEADERS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES \
	install-libopenhlx_server_a_includeHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLIBRARIES \
	uninstall-libopenhlx_server_a_includeHEADERS

.PRECIOUS: Makefile


include $(abs_top_nlbuild_autotools_dir)/automake/pre.am

# Ensure that libraries are built before trying to run any recursive
# targets from SUBDIRS that might depend on them.

AM_RECURSIVE_TARGETS: $(LIBRARIES)

include $(abs_top_nlbuild_autotools_dir)/automake/post.am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
