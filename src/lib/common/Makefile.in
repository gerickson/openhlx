# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#    Copyright (c) 2020-2021 Grant Erickson
#    All rights reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an "AS
#    IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
#    express or implied.  See the License for the specific language
#    governing permissions and limitations under the License.
#

#
#    Description:
#      This file is the makefile for the OpenHLX common, shared
#      implementation (that is, for both clients and servers)
#      library.
#


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/lib/common
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/third_party/cycript/repo/m4/framework.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/ax_check_compiler.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage_reporting.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_debug.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_docs.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_optimization.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_tests.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_filtered_canonical.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_with_package.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/libtool.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltoptions.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltsugar.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltversion.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am \
	$(libopenhlx_common_a_include_HEADERS) $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/include/openhlx-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libopenhlx_common_a_includedir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libopenhlx_common_a_AR = $(AR) $(ARFLAGS)
libopenhlx_common_a_LIBADD =
am_libopenhlx_common_a_OBJECTS =  \
	libopenhlx_common_a-ApplicationControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-CommandBalanceBufferBasis.$(OBJEXT) \
	libopenhlx_common_a-CommandBuffer.$(OBJEXT) \
	libopenhlx_common_a-CommandConfigurationRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandDelimitedBuffer.$(OBJEXT) \
	libopenhlx_common_a-CommandDelimitedRegularExpression.$(OBJEXT) \
	libopenhlx_common_a-CommandEqualizerBufferBases.$(OBJEXT) \
	libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandFavoritesRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandFrontPanelBufferBases.$(OBJEXT) \
	libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandGroupsRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandInfraredBufferBases.$(OBJEXT) \
	libopenhlx_common_a-CommandInfraredRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandNameSetBufferBasis.$(OBJEXT) \
	libopenhlx_common_a-CommandNetworkBufferBases.$(OBJEXT) \
	libopenhlx_common_a-CommandNetworkRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandPropertyBufferBases.$(OBJEXT) \
	libopenhlx_common_a-CommandQueryBufferBasis.$(OBJEXT) \
	libopenhlx_common_a-CommandRegularExpression.$(OBJEXT) \
	libopenhlx_common_a-CommandRoleDelimitedBuffer.$(OBJEXT) \
	libopenhlx_common_a-CommandRoleDelimitedRegularExpression.$(OBJEXT) \
	libopenhlx_common_a-CommandRoleDelimiters.$(OBJEXT) \
	libopenhlx_common_a-CommandSourceBufferBases.$(OBJEXT) \
	libopenhlx_common_a-CommandSourcesRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-CommandToneBufferBasis.$(OBJEXT) \
	libopenhlx_common_a-CommandVolumeBufferBases.$(OBJEXT) \
	libopenhlx_common_a-CommandZonesRegularExpressionBases.$(OBJEXT) \
	libopenhlx_common_a-ConfigurationControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-ConnectionBasis.$(OBJEXT) \
	libopenhlx_common_a-ConnectionBuffer.$(OBJEXT) \
	libopenhlx_common_a-ConnectionManagerBasis.$(OBJEXT) \
	libopenhlx_common_a-EqualizerPresetsControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-FavoritesControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-FrontPanelControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-GroupsControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-HostURL.$(OBJEXT) \
	libopenhlx_common_a-HostURLAddress.$(OBJEXT) \
	libopenhlx_common_a-InfraredControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-IPAddress.$(OBJEXT) \
	libopenhlx_common_a-NetworkControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-OutputStringStream.$(OBJEXT) \
	libopenhlx_common_a-RegularExpression.$(OBJEXT) \
	libopenhlx_common_a-RunLoopParameters.$(OBJEXT) \
	libopenhlx_common_a-RunLoopQueue.$(OBJEXT) \
	libopenhlx_common_a-SocketAddress.$(OBJEXT) \
	libopenhlx_common_a-SourcesControllerBasis.$(OBJEXT) \
	libopenhlx_common_a-Timeout.$(OBJEXT) \
	libopenhlx_common_a-Timer.$(OBJEXT) \
	libopenhlx_common_a-Version.$(OBJEXT) \
	libopenhlx_common_a-ZonesControllerBasis.$(OBJEXT)
libopenhlx_common_a_OBJECTS = $(am_libopenhlx_common_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/include
depcomp = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandBuffer.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Po \
	./$(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Po \
	./$(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-HostURL.Po \
	./$(DEPDIR)/libopenhlx_common_a-HostURLAddress.Po \
	./$(DEPDIR)/libopenhlx_common_a-IPAddress.Po \
	./$(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-OutputStringStream.Po \
	./$(DEPDIR)/libopenhlx_common_a-RegularExpression.Po \
	./$(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Po \
	./$(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Po \
	./$(DEPDIR)/libopenhlx_common_a-SocketAddress.Po \
	./$(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Po \
	./$(DEPDIR)/libopenhlx_common_a-Timeout.Po \
	./$(DEPDIR)/libopenhlx_common_a-Timer.Po \
	./$(DEPDIR)/libopenhlx_common_a-Version.Po \
	./$(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libopenhlx_common_a_SOURCES)
DIST_SOURCES = $(libopenhlx_common_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(libopenhlx_common_a_include_HEADERS) $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ASCIIDOC = @ASCIIDOC@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_LIBS = @BOOST_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFUTILITIES_CPPFLAGS = @CFUTILITIES_CPPFLAGS@
CFUTILITIES_LDFLAGS = @CFUTILITIES_LDFLAGS@
CFUTILITIES_LIBS = @CFUTILITIES_LIBS@
CFUTILITIES_SUBDIRS = @CFUTILITIES_SUBDIRS@
CF_CPPFLAGS = @CF_CPPFLAGS@
CF_LDFLAGS = @CF_LDFLAGS@
CF_LIBS = @CF_LIBS@
CLANG_FORMAT = @CLANG_FORMAT@
CMP = @CMP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_USE_DOT = @DOXYGEN_USE_DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GENHTML = @GENHTML@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
HLXSIMD_DEFAULT_CONFIG_PATH = @HLXSIMD_DEFAULT_CONFIG_PATH@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBNL_CPPFLAGS = @LIBNL_CPPFLAGS@
LIBNL_LDFLAGS = @LIBNL_LDFLAGS@
LIBNL_LIBS = @LIBNL_LIBS@
LIBOBJS = @LIBOBJS@
LIBOPENHLX_VERSION_AGE = @LIBOPENHLX_VERSION_AGE@
LIBOPENHLX_VERSION_CURRENT = @LIBOPENHLX_VERSION_CURRENT@
LIBOPENHLX_VERSION_INFO = @LIBOPENHLX_VERSION_INFO@
LIBOPENHLX_VERSION_REVISION = @LIBOPENHLX_VERSION_REVISION@
LIBS = @LIBS@
LIBTELNET_CPPFLAGS = @LIBTELNET_CPPFLAGS@
LIBTELNET_LDFLAGS = @LIBTELNET_LDFLAGS@
LIBTELNET_LIBS = @LIBTELNET_LIBS@
LIBTELNET_SUBDIRS = @LIBTELNET_SUBDIRS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOGUTILITIES_CPPFLAGS = @LOGUTILITIES_CPPFLAGS@
LOGUTILITIES_LDFLAGS = @LOGUTILITIES_LDFLAGS@
LOGUTILITIES_LIBS = @LOGUTILITIES_LIBS@
LOGUTILITIES_SUBDIRS = @LOGUTILITIES_SUBDIRS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NLASSERT_CPPFLAGS = @NLASSERT_CPPFLAGS@
NLASSERT_LDFLAGS = @NLASSERT_LDFLAGS@
NLASSERT_LIBS = @NLASSERT_LIBS@
NLASSERT_SUBDIRS = @NLASSERT_SUBDIRS@
NLUNIT_TEST_CPPFLAGS = @NLUNIT_TEST_CPPFLAGS@
NLUNIT_TEST_LDFLAGS = @NLUNIT_TEST_LDFLAGS@
NLUNIT_TEST_LIBS = @NLUNIT_TEST_LIBS@
NLUNIT_TEST_SUBDIRS = @NLUNIT_TEST_SUBDIRS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJCOPY = @OBJCOPY@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENHLX_CF_SOURCE = @OPENHLX_CF_SOURCE@
OPENHLX_CF_SOURCE_CFLITE = @OPENHLX_CF_SOURCE_CFLITE@
OPENHLX_CF_SOURCE_FRAMEWORK = @OPENHLX_CF_SOURCE_FRAMEWORK@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PRETTY = @PRETTY@
PRETTY_ARGS = @PRETTY_ARGS@
PRETTY_CHECK = @PRETTY_CHECK@
PRETTY_CHECK_ARGS = @PRETTY_CHECK_ARGS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRE_CPPFLAGS = @TRE_CPPFLAGS@
TRE_LDFLAGS = @TRE_LDFLAGS@
TRE_LIBS = @TRE_LIBS@
VERSION = @VERSION@
XMLTO = @XMLTO@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_nlbuild_autotools_dir = @abs_top_nlbuild_autotools_dir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nl_filtered_build = @nl_filtered_build@
nl_filtered_build_cpu = @nl_filtered_build_cpu@
nl_filtered_build_os = @nl_filtered_build_os@
nl_filtered_build_vendor = @nl_filtered_build_vendor@
nl_filtered_host = @nl_filtered_host@
nl_filtered_host_cpu = @nl_filtered_host_cpu@
nl_filtered_host_os = @nl_filtered_host_os@
nl_filtered_host_vendor = @nl_filtered_host_vendor@
nl_filtered_target = @nl_filtered_target@
nl_filtered_target_cpu = @nl_filtered_target_cpu@
nl_filtered_target_os = @nl_filtered_target_os@
nl_filtered_target_vendor = @nl_filtered_target_vendor@
nlbuild_autotools_stem = @nlbuild_autotools_stem@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = \
    libopenhlx-common.a                                       \
    $(NULL)

SUBDIRS = \
    tests                                                     \
    $(NULL)

noinst_HEADERS = \
    $(NULL)


# The 'install' target directory transform. Headers in
# libopenhlx_common_a_include_HEADERS will get installed in
# libopenhlx_common_a_includedir.
libopenhlx_common_a_includedir = \
    ${includedir}/OpenHLX/Common


# Public library headers to distribute and install.
libopenhlx_common_a_include_HEADERS = \
    ApplicationControllerBasis.hpp                            \
    ApplicationControllerErrorDelegate.hpp                    \
    ApplicationObjectControllerContainerTemplate.hpp          \
    CommandBalanceBufferBasis.hpp                             \
    CommandBuffer.hpp                                         \
    CommandBufferBasis.hpp                                    \
    CommandConfigurationRegularExpressionBases.hpp            \
    CommandDelimitedBuffer.hpp                                \
    CommandDelimitedRegularExpression.hpp                     \
    CommandDelimiters.hpp                                     \
    CommandEqualizerBufferBases.hpp                           \
    CommandEqualizerPresetsRegularExpressionBases.hpp         \
    CommandFavoritesRegularExpressionBases.hpp                \
    CommandFrontPanelBufferBases.hpp                          \
    CommandFrontPanelRegularExpressionBases.hpp               \
    CommandGroupsRegularExpressionBases.hpp                   \
    CommandInfraredBufferBases.hpp                            \
    CommandInfraredRegularExpressionBases.hpp                 \
    CommandNameSetBufferBasis.hpp                             \
    CommandNetworkBufferBases.hpp                             \
    CommandNetworkRegularExpressionBases.hpp                  \
    CommandPropertyBufferBases.hpp                            \
    CommandQueryBufferBasis.hpp                               \
    CommandRegularExpression.hpp                              \
    CommandRegularExpressionBasis.hpp                         \
    CommandRole.hpp                                           \
    CommandRoleDelimitedBuffer.hpp                            \
    CommandRoleDelimitedRegularExpression.hpp                 \
    CommandRoleDelimiters.hpp                                 \
    CommandSourceBufferBases.hpp                              \
    CommandSourcesRegularExpressionBases.hpp                  \
    CommandToneBufferBasis.hpp                                \
    CommandVolumeBufferBases.hpp                              \
    CommandZonesRegularExpressionBases.hpp                    \
    ConfigurationControllerBasis.hpp                          \
    ConnectionBasis.hpp                                       \
    ConnectionBuffer.hpp                                      \
    ConnectionManagerApplicationDataDelegate.hpp              \
    ConnectionManagerBasis.hpp                                \
    ConnectionManagerDelegateBasis.hpp                        \
    EqualizerPresetsControllerBasis.hpp                       \
    Errors.hpp                                                \
    FavoritesControllerBasis.hpp                              \
    FrontPanelControllerBasis.hpp                             \
    GroupsControllerBasis.hpp                                 \
    HostURL.hpp                                               \
    HostURLAddress.hpp                                        \
    InfraredControllerBasis.hpp                               \
    IPAddress.hpp                                             \
    NetworkControllerBasis.hpp                                \
    OutputStringStream.hpp                                    \
    RegularExpression.hpp                                     \
    RunLoopParameters.hpp                                     \
    RunLoopQueue.hpp                                          \
    RunLoopQueueDelegate.hpp                                  \
    SocketAddress.hpp                                         \
    SourcesControllerBasis.hpp                                \
    Timeout.hpp                                               \
    Timer.hpp                                                 \
    TimerDelegate.hpp                                         \
    Version.hpp                                               \
    ZonesControllerBasis.hpp                                  \
    $(NULL)

libopenhlx_common_a_CPPFLAGS = \
    -I$(top_srcdir)/third_party/CFUtilities/repo/include      \
    -I$(top_srcdir)/third_party/LogUtilities/repo/include     \
    -I$(top_srcdir)/third_party/libtelnet/repo                \
    -I$(top_srcdir)/src/lib/model                             \
    -I$(top_srcdir)/src/lib/utilities                         \
    $(NULL)

libopenhlx_common_a_SOURCES = \
    ApplicationControllerBasis.cpp                            \
    CommandBalanceBufferBasis.cpp                             \
    CommandBuffer.cpp                                         \
    CommandConfigurationRegularExpressionBases.cpp            \
    CommandDelimitedBuffer.cpp                                \
    CommandDelimitedRegularExpression.cpp                     \
    CommandEqualizerBufferBases.cpp                           \
    CommandEqualizerPresetsRegularExpressionBases.cpp         \
    CommandFavoritesRegularExpressionBases.cpp                \
    CommandFrontPanelBufferBases.cpp                          \
    CommandFrontPanelRegularExpressionBases.cpp               \
    CommandGroupsRegularExpressionBases.cpp                   \
    CommandInfraredBufferBases.cpp                            \
    CommandInfraredRegularExpressionBases.cpp                 \
    CommandNameSetBufferBasis.cpp                             \
    CommandNetworkBufferBases.cpp                             \
    CommandNetworkRegularExpressionBases.cpp                  \
    CommandPropertyBufferBases.cpp                            \
    CommandQueryBufferBasis.cpp                               \
    CommandRegularExpression.cpp                              \
    CommandRoleDelimitedBuffer.cpp                            \
    CommandRoleDelimitedRegularExpression.cpp                 \
    CommandRoleDelimiters.cpp                                 \
    CommandSourceBufferBases.cpp                              \
    CommandSourcesRegularExpressionBases.cpp                  \
    CommandToneBufferBasis.cpp                                \
    CommandVolumeBufferBases.cpp                              \
    CommandZonesRegularExpressionBases.cpp                    \
    ConfigurationControllerBasis.cpp                          \
    ConnectionBasis.cpp                                       \
    ConnectionBuffer.cpp                                      \
    ConnectionManagerBasis.cpp                                \
    EqualizerPresetsControllerBasis.cpp                       \
    FavoritesControllerBasis.cpp                              \
    FrontPanelControllerBasis.cpp                             \
    GroupsControllerBasis.cpp                                 \
    HostURL.cpp                                               \
    HostURLAddress.cpp                                        \
    InfraredControllerBasis.cpp                               \
    IPAddress.cpp                                             \
    NetworkControllerBasis.cpp                                \
    OutputStringStream.cpp                                    \
    RegularExpression.cpp                                     \
    RunLoopParameters.cpp                                     \
    RunLoopQueue.cpp                                          \
    SocketAddress.cpp                                         \
    SourcesControllerBasis.cpp                                \
    Timeout.cpp                                               \
    Timer.cpp                                                 \
    Version.cpp                                               \
    ZonesControllerBasis.cpp                                  \
    $(NULL)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/lib/common/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/lib/common/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libopenhlx-common.a: $(libopenhlx_common_a_OBJECTS) $(libopenhlx_common_a_DEPENDENCIES) $(EXTRA_libopenhlx_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libopenhlx-common.a
	$(AM_V_AR)$(libopenhlx_common_a_AR) libopenhlx-common.a $(libopenhlx_common_a_OBJECTS) $(libopenhlx_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libopenhlx-common.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandBuffer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-HostURL.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-HostURLAddress.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-IPAddress.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-OutputStringStream.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-RegularExpression.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-SocketAddress.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-Timeout.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-Timer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-Version.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libopenhlx_common_a-ApplicationControllerBasis.o: ApplicationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ApplicationControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Tpo -c -o libopenhlx_common_a-ApplicationControllerBasis.o `test -f 'ApplicationControllerBasis.cpp' || echo '$(srcdir)/'`ApplicationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ApplicationControllerBasis.cpp' object='libopenhlx_common_a-ApplicationControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ApplicationControllerBasis.o `test -f 'ApplicationControllerBasis.cpp' || echo '$(srcdir)/'`ApplicationControllerBasis.cpp

libopenhlx_common_a-ApplicationControllerBasis.obj: ApplicationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ApplicationControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Tpo -c -o libopenhlx_common_a-ApplicationControllerBasis.obj `if test -f 'ApplicationControllerBasis.cpp'; then $(CYGPATH_W) 'ApplicationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ApplicationControllerBasis.cpp' object='libopenhlx_common_a-ApplicationControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ApplicationControllerBasis.obj `if test -f 'ApplicationControllerBasis.cpp'; then $(CYGPATH_W) 'ApplicationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ApplicationControllerBasis.cpp'; fi`

libopenhlx_common_a-CommandBalanceBufferBasis.o: CommandBalanceBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandBalanceBufferBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Tpo -c -o libopenhlx_common_a-CommandBalanceBufferBasis.o `test -f 'CommandBalanceBufferBasis.cpp' || echo '$(srcdir)/'`CommandBalanceBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBalanceBufferBasis.cpp' object='libopenhlx_common_a-CommandBalanceBufferBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandBalanceBufferBasis.o `test -f 'CommandBalanceBufferBasis.cpp' || echo '$(srcdir)/'`CommandBalanceBufferBasis.cpp

libopenhlx_common_a-CommandBalanceBufferBasis.obj: CommandBalanceBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandBalanceBufferBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Tpo -c -o libopenhlx_common_a-CommandBalanceBufferBasis.obj `if test -f 'CommandBalanceBufferBasis.cpp'; then $(CYGPATH_W) 'CommandBalanceBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBalanceBufferBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBalanceBufferBasis.cpp' object='libopenhlx_common_a-CommandBalanceBufferBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandBalanceBufferBasis.obj `if test -f 'CommandBalanceBufferBasis.cpp'; then $(CYGPATH_W) 'CommandBalanceBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBalanceBufferBasis.cpp'; fi`

libopenhlx_common_a-CommandBuffer.o: CommandBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandBuffer.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandBuffer.Tpo -c -o libopenhlx_common_a-CommandBuffer.o `test -f 'CommandBuffer.cpp' || echo '$(srcdir)/'`CommandBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-CommandBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBuffer.cpp' object='libopenhlx_common_a-CommandBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandBuffer.o `test -f 'CommandBuffer.cpp' || echo '$(srcdir)/'`CommandBuffer.cpp

libopenhlx_common_a-CommandBuffer.obj: CommandBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandBuffer.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandBuffer.Tpo -c -o libopenhlx_common_a-CommandBuffer.obj `if test -f 'CommandBuffer.cpp'; then $(CYGPATH_W) 'CommandBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-CommandBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBuffer.cpp' object='libopenhlx_common_a-CommandBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandBuffer.obj `if test -f 'CommandBuffer.cpp'; then $(CYGPATH_W) 'CommandBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBuffer.cpp'; fi`

libopenhlx_common_a-CommandConfigurationRegularExpressionBases.o: CommandConfigurationRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandConfigurationRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandConfigurationRegularExpressionBases.o `test -f 'CommandConfigurationRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandConfigurationRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandConfigurationRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandConfigurationRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandConfigurationRegularExpressionBases.o `test -f 'CommandConfigurationRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandConfigurationRegularExpressionBases.cpp

libopenhlx_common_a-CommandConfigurationRegularExpressionBases.obj: CommandConfigurationRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandConfigurationRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandConfigurationRegularExpressionBases.obj `if test -f 'CommandConfigurationRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandConfigurationRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandConfigurationRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandConfigurationRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandConfigurationRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandConfigurationRegularExpressionBases.obj `if test -f 'CommandConfigurationRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandConfigurationRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandConfigurationRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandDelimitedBuffer.o: CommandDelimitedBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandDelimitedBuffer.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Tpo -c -o libopenhlx_common_a-CommandDelimitedBuffer.o `test -f 'CommandDelimitedBuffer.cpp' || echo '$(srcdir)/'`CommandDelimitedBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandDelimitedBuffer.cpp' object='libopenhlx_common_a-CommandDelimitedBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandDelimitedBuffer.o `test -f 'CommandDelimitedBuffer.cpp' || echo '$(srcdir)/'`CommandDelimitedBuffer.cpp

libopenhlx_common_a-CommandDelimitedBuffer.obj: CommandDelimitedBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandDelimitedBuffer.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Tpo -c -o libopenhlx_common_a-CommandDelimitedBuffer.obj `if test -f 'CommandDelimitedBuffer.cpp'; then $(CYGPATH_W) 'CommandDelimitedBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandDelimitedBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandDelimitedBuffer.cpp' object='libopenhlx_common_a-CommandDelimitedBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandDelimitedBuffer.obj `if test -f 'CommandDelimitedBuffer.cpp'; then $(CYGPATH_W) 'CommandDelimitedBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandDelimitedBuffer.cpp'; fi`

libopenhlx_common_a-CommandDelimitedRegularExpression.o: CommandDelimitedRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandDelimitedRegularExpression.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Tpo -c -o libopenhlx_common_a-CommandDelimitedRegularExpression.o `test -f 'CommandDelimitedRegularExpression.cpp' || echo '$(srcdir)/'`CommandDelimitedRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandDelimitedRegularExpression.cpp' object='libopenhlx_common_a-CommandDelimitedRegularExpression.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandDelimitedRegularExpression.o `test -f 'CommandDelimitedRegularExpression.cpp' || echo '$(srcdir)/'`CommandDelimitedRegularExpression.cpp

libopenhlx_common_a-CommandDelimitedRegularExpression.obj: CommandDelimitedRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandDelimitedRegularExpression.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Tpo -c -o libopenhlx_common_a-CommandDelimitedRegularExpression.obj `if test -f 'CommandDelimitedRegularExpression.cpp'; then $(CYGPATH_W) 'CommandDelimitedRegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandDelimitedRegularExpression.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandDelimitedRegularExpression.cpp' object='libopenhlx_common_a-CommandDelimitedRegularExpression.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandDelimitedRegularExpression.obj `if test -f 'CommandDelimitedRegularExpression.cpp'; then $(CYGPATH_W) 'CommandDelimitedRegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandDelimitedRegularExpression.cpp'; fi`

libopenhlx_common_a-CommandEqualizerBufferBases.o: CommandEqualizerBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandEqualizerBufferBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Tpo -c -o libopenhlx_common_a-CommandEqualizerBufferBases.o `test -f 'CommandEqualizerBufferBases.cpp' || echo '$(srcdir)/'`CommandEqualizerBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerBufferBases.cpp' object='libopenhlx_common_a-CommandEqualizerBufferBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandEqualizerBufferBases.o `test -f 'CommandEqualizerBufferBases.cpp' || echo '$(srcdir)/'`CommandEqualizerBufferBases.cpp

libopenhlx_common_a-CommandEqualizerBufferBases.obj: CommandEqualizerBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandEqualizerBufferBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Tpo -c -o libopenhlx_common_a-CommandEqualizerBufferBases.obj `if test -f 'CommandEqualizerBufferBases.cpp'; then $(CYGPATH_W) 'CommandEqualizerBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerBufferBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerBufferBases.cpp' object='libopenhlx_common_a-CommandEqualizerBufferBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandEqualizerBufferBases.obj `if test -f 'CommandEqualizerBufferBases.cpp'; then $(CYGPATH_W) 'CommandEqualizerBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerBufferBases.cpp'; fi`

libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.o: CommandEqualizerPresetsRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.o `test -f 'CommandEqualizerPresetsRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandEqualizerPresetsRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerPresetsRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.o `test -f 'CommandEqualizerPresetsRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandEqualizerPresetsRegularExpressionBases.cpp

libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.obj: CommandEqualizerPresetsRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.obj `if test -f 'CommandEqualizerPresetsRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandEqualizerPresetsRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerPresetsRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerPresetsRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.obj `if test -f 'CommandEqualizerPresetsRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandEqualizerPresetsRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerPresetsRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandFavoritesRegularExpressionBases.o: CommandFavoritesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandFavoritesRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandFavoritesRegularExpressionBases.o `test -f 'CommandFavoritesRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandFavoritesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandFavoritesRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandFavoritesRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandFavoritesRegularExpressionBases.o `test -f 'CommandFavoritesRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandFavoritesRegularExpressionBases.cpp

libopenhlx_common_a-CommandFavoritesRegularExpressionBases.obj: CommandFavoritesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandFavoritesRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandFavoritesRegularExpressionBases.obj `if test -f 'CommandFavoritesRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandFavoritesRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandFavoritesRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandFavoritesRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandFavoritesRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandFavoritesRegularExpressionBases.obj `if test -f 'CommandFavoritesRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandFavoritesRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandFavoritesRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandFrontPanelBufferBases.o: CommandFrontPanelBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandFrontPanelBufferBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Tpo -c -o libopenhlx_common_a-CommandFrontPanelBufferBases.o `test -f 'CommandFrontPanelBufferBases.cpp' || echo '$(srcdir)/'`CommandFrontPanelBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandFrontPanelBufferBases.cpp' object='libopenhlx_common_a-CommandFrontPanelBufferBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandFrontPanelBufferBases.o `test -f 'CommandFrontPanelBufferBases.cpp' || echo '$(srcdir)/'`CommandFrontPanelBufferBases.cpp

libopenhlx_common_a-CommandFrontPanelBufferBases.obj: CommandFrontPanelBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandFrontPanelBufferBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Tpo -c -o libopenhlx_common_a-CommandFrontPanelBufferBases.obj `if test -f 'CommandFrontPanelBufferBases.cpp'; then $(CYGPATH_W) 'CommandFrontPanelBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandFrontPanelBufferBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandFrontPanelBufferBases.cpp' object='libopenhlx_common_a-CommandFrontPanelBufferBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandFrontPanelBufferBases.obj `if test -f 'CommandFrontPanelBufferBases.cpp'; then $(CYGPATH_W) 'CommandFrontPanelBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandFrontPanelBufferBases.cpp'; fi`

libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.o: CommandFrontPanelRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.o `test -f 'CommandFrontPanelRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandFrontPanelRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandFrontPanelRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.o `test -f 'CommandFrontPanelRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandFrontPanelRegularExpressionBases.cpp

libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.obj: CommandFrontPanelRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.obj `if test -f 'CommandFrontPanelRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandFrontPanelRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandFrontPanelRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandFrontPanelRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.obj `if test -f 'CommandFrontPanelRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandFrontPanelRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandFrontPanelRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandGroupsRegularExpressionBases.o: CommandGroupsRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandGroupsRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandGroupsRegularExpressionBases.o `test -f 'CommandGroupsRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandGroupsRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandGroupsRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandGroupsRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandGroupsRegularExpressionBases.o `test -f 'CommandGroupsRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandGroupsRegularExpressionBases.cpp

libopenhlx_common_a-CommandGroupsRegularExpressionBases.obj: CommandGroupsRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandGroupsRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandGroupsRegularExpressionBases.obj `if test -f 'CommandGroupsRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandGroupsRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandGroupsRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandGroupsRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandGroupsRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandGroupsRegularExpressionBases.obj `if test -f 'CommandGroupsRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandGroupsRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandGroupsRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandInfraredBufferBases.o: CommandInfraredBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandInfraredBufferBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Tpo -c -o libopenhlx_common_a-CommandInfraredBufferBases.o `test -f 'CommandInfraredBufferBases.cpp' || echo '$(srcdir)/'`CommandInfraredBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandInfraredBufferBases.cpp' object='libopenhlx_common_a-CommandInfraredBufferBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandInfraredBufferBases.o `test -f 'CommandInfraredBufferBases.cpp' || echo '$(srcdir)/'`CommandInfraredBufferBases.cpp

libopenhlx_common_a-CommandInfraredBufferBases.obj: CommandInfraredBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandInfraredBufferBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Tpo -c -o libopenhlx_common_a-CommandInfraredBufferBases.obj `if test -f 'CommandInfraredBufferBases.cpp'; then $(CYGPATH_W) 'CommandInfraredBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandInfraredBufferBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandInfraredBufferBases.cpp' object='libopenhlx_common_a-CommandInfraredBufferBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandInfraredBufferBases.obj `if test -f 'CommandInfraredBufferBases.cpp'; then $(CYGPATH_W) 'CommandInfraredBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandInfraredBufferBases.cpp'; fi`

libopenhlx_common_a-CommandInfraredRegularExpressionBases.o: CommandInfraredRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandInfraredRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandInfraredRegularExpressionBases.o `test -f 'CommandInfraredRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandInfraredRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandInfraredRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandInfraredRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandInfraredRegularExpressionBases.o `test -f 'CommandInfraredRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandInfraredRegularExpressionBases.cpp

libopenhlx_common_a-CommandInfraredRegularExpressionBases.obj: CommandInfraredRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandInfraredRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandInfraredRegularExpressionBases.obj `if test -f 'CommandInfraredRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandInfraredRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandInfraredRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandInfraredRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandInfraredRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandInfraredRegularExpressionBases.obj `if test -f 'CommandInfraredRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandInfraredRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandInfraredRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandNameSetBufferBasis.o: CommandNameSetBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandNameSetBufferBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Tpo -c -o libopenhlx_common_a-CommandNameSetBufferBasis.o `test -f 'CommandNameSetBufferBasis.cpp' || echo '$(srcdir)/'`CommandNameSetBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNameSetBufferBasis.cpp' object='libopenhlx_common_a-CommandNameSetBufferBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandNameSetBufferBasis.o `test -f 'CommandNameSetBufferBasis.cpp' || echo '$(srcdir)/'`CommandNameSetBufferBasis.cpp

libopenhlx_common_a-CommandNameSetBufferBasis.obj: CommandNameSetBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandNameSetBufferBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Tpo -c -o libopenhlx_common_a-CommandNameSetBufferBasis.obj `if test -f 'CommandNameSetBufferBasis.cpp'; then $(CYGPATH_W) 'CommandNameSetBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNameSetBufferBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNameSetBufferBasis.cpp' object='libopenhlx_common_a-CommandNameSetBufferBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandNameSetBufferBasis.obj `if test -f 'CommandNameSetBufferBasis.cpp'; then $(CYGPATH_W) 'CommandNameSetBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNameSetBufferBasis.cpp'; fi`

libopenhlx_common_a-CommandNetworkBufferBases.o: CommandNetworkBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandNetworkBufferBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Tpo -c -o libopenhlx_common_a-CommandNetworkBufferBases.o `test -f 'CommandNetworkBufferBases.cpp' || echo '$(srcdir)/'`CommandNetworkBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNetworkBufferBases.cpp' object='libopenhlx_common_a-CommandNetworkBufferBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandNetworkBufferBases.o `test -f 'CommandNetworkBufferBases.cpp' || echo '$(srcdir)/'`CommandNetworkBufferBases.cpp

libopenhlx_common_a-CommandNetworkBufferBases.obj: CommandNetworkBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandNetworkBufferBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Tpo -c -o libopenhlx_common_a-CommandNetworkBufferBases.obj `if test -f 'CommandNetworkBufferBases.cpp'; then $(CYGPATH_W) 'CommandNetworkBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNetworkBufferBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNetworkBufferBases.cpp' object='libopenhlx_common_a-CommandNetworkBufferBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandNetworkBufferBases.obj `if test -f 'CommandNetworkBufferBases.cpp'; then $(CYGPATH_W) 'CommandNetworkBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNetworkBufferBases.cpp'; fi`

libopenhlx_common_a-CommandNetworkRegularExpressionBases.o: CommandNetworkRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandNetworkRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandNetworkRegularExpressionBases.o `test -f 'CommandNetworkRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandNetworkRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNetworkRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandNetworkRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandNetworkRegularExpressionBases.o `test -f 'CommandNetworkRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandNetworkRegularExpressionBases.cpp

libopenhlx_common_a-CommandNetworkRegularExpressionBases.obj: CommandNetworkRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandNetworkRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandNetworkRegularExpressionBases.obj `if test -f 'CommandNetworkRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandNetworkRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNetworkRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNetworkRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandNetworkRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandNetworkRegularExpressionBases.obj `if test -f 'CommandNetworkRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandNetworkRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNetworkRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandPropertyBufferBases.o: CommandPropertyBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandPropertyBufferBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Tpo -c -o libopenhlx_common_a-CommandPropertyBufferBases.o `test -f 'CommandPropertyBufferBases.cpp' || echo '$(srcdir)/'`CommandPropertyBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandPropertyBufferBases.cpp' object='libopenhlx_common_a-CommandPropertyBufferBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandPropertyBufferBases.o `test -f 'CommandPropertyBufferBases.cpp' || echo '$(srcdir)/'`CommandPropertyBufferBases.cpp

libopenhlx_common_a-CommandPropertyBufferBases.obj: CommandPropertyBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandPropertyBufferBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Tpo -c -o libopenhlx_common_a-CommandPropertyBufferBases.obj `if test -f 'CommandPropertyBufferBases.cpp'; then $(CYGPATH_W) 'CommandPropertyBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandPropertyBufferBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandPropertyBufferBases.cpp' object='libopenhlx_common_a-CommandPropertyBufferBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandPropertyBufferBases.obj `if test -f 'CommandPropertyBufferBases.cpp'; then $(CYGPATH_W) 'CommandPropertyBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandPropertyBufferBases.cpp'; fi`

libopenhlx_common_a-CommandQueryBufferBasis.o: CommandQueryBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandQueryBufferBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Tpo -c -o libopenhlx_common_a-CommandQueryBufferBasis.o `test -f 'CommandQueryBufferBasis.cpp' || echo '$(srcdir)/'`CommandQueryBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandQueryBufferBasis.cpp' object='libopenhlx_common_a-CommandQueryBufferBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandQueryBufferBasis.o `test -f 'CommandQueryBufferBasis.cpp' || echo '$(srcdir)/'`CommandQueryBufferBasis.cpp

libopenhlx_common_a-CommandQueryBufferBasis.obj: CommandQueryBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandQueryBufferBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Tpo -c -o libopenhlx_common_a-CommandQueryBufferBasis.obj `if test -f 'CommandQueryBufferBasis.cpp'; then $(CYGPATH_W) 'CommandQueryBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueryBufferBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandQueryBufferBasis.cpp' object='libopenhlx_common_a-CommandQueryBufferBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandQueryBufferBasis.obj `if test -f 'CommandQueryBufferBasis.cpp'; then $(CYGPATH_W) 'CommandQueryBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueryBufferBasis.cpp'; fi`

libopenhlx_common_a-CommandRegularExpression.o: CommandRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRegularExpression.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Tpo -c -o libopenhlx_common_a-CommandRegularExpression.o `test -f 'CommandRegularExpression.cpp' || echo '$(srcdir)/'`CommandRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRegularExpression.cpp' object='libopenhlx_common_a-CommandRegularExpression.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRegularExpression.o `test -f 'CommandRegularExpression.cpp' || echo '$(srcdir)/'`CommandRegularExpression.cpp

libopenhlx_common_a-CommandRegularExpression.obj: CommandRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRegularExpression.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Tpo -c -o libopenhlx_common_a-CommandRegularExpression.obj `if test -f 'CommandRegularExpression.cpp'; then $(CYGPATH_W) 'CommandRegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRegularExpression.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRegularExpression.cpp' object='libopenhlx_common_a-CommandRegularExpression.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRegularExpression.obj `if test -f 'CommandRegularExpression.cpp'; then $(CYGPATH_W) 'CommandRegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRegularExpression.cpp'; fi`

libopenhlx_common_a-CommandRoleDelimitedBuffer.o: CommandRoleDelimitedBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRoleDelimitedBuffer.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Tpo -c -o libopenhlx_common_a-CommandRoleDelimitedBuffer.o `test -f 'CommandRoleDelimitedBuffer.cpp' || echo '$(srcdir)/'`CommandRoleDelimitedBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRoleDelimitedBuffer.cpp' object='libopenhlx_common_a-CommandRoleDelimitedBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRoleDelimitedBuffer.o `test -f 'CommandRoleDelimitedBuffer.cpp' || echo '$(srcdir)/'`CommandRoleDelimitedBuffer.cpp

libopenhlx_common_a-CommandRoleDelimitedBuffer.obj: CommandRoleDelimitedBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRoleDelimitedBuffer.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Tpo -c -o libopenhlx_common_a-CommandRoleDelimitedBuffer.obj `if test -f 'CommandRoleDelimitedBuffer.cpp'; then $(CYGPATH_W) 'CommandRoleDelimitedBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRoleDelimitedBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRoleDelimitedBuffer.cpp' object='libopenhlx_common_a-CommandRoleDelimitedBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRoleDelimitedBuffer.obj `if test -f 'CommandRoleDelimitedBuffer.cpp'; then $(CYGPATH_W) 'CommandRoleDelimitedBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRoleDelimitedBuffer.cpp'; fi`

libopenhlx_common_a-CommandRoleDelimitedRegularExpression.o: CommandRoleDelimitedRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRoleDelimitedRegularExpression.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Tpo -c -o libopenhlx_common_a-CommandRoleDelimitedRegularExpression.o `test -f 'CommandRoleDelimitedRegularExpression.cpp' || echo '$(srcdir)/'`CommandRoleDelimitedRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRoleDelimitedRegularExpression.cpp' object='libopenhlx_common_a-CommandRoleDelimitedRegularExpression.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRoleDelimitedRegularExpression.o `test -f 'CommandRoleDelimitedRegularExpression.cpp' || echo '$(srcdir)/'`CommandRoleDelimitedRegularExpression.cpp

libopenhlx_common_a-CommandRoleDelimitedRegularExpression.obj: CommandRoleDelimitedRegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRoleDelimitedRegularExpression.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Tpo -c -o libopenhlx_common_a-CommandRoleDelimitedRegularExpression.obj `if test -f 'CommandRoleDelimitedRegularExpression.cpp'; then $(CYGPATH_W) 'CommandRoleDelimitedRegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRoleDelimitedRegularExpression.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRoleDelimitedRegularExpression.cpp' object='libopenhlx_common_a-CommandRoleDelimitedRegularExpression.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRoleDelimitedRegularExpression.obj `if test -f 'CommandRoleDelimitedRegularExpression.cpp'; then $(CYGPATH_W) 'CommandRoleDelimitedRegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRoleDelimitedRegularExpression.cpp'; fi`

libopenhlx_common_a-CommandRoleDelimiters.o: CommandRoleDelimiters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRoleDelimiters.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Tpo -c -o libopenhlx_common_a-CommandRoleDelimiters.o `test -f 'CommandRoleDelimiters.cpp' || echo '$(srcdir)/'`CommandRoleDelimiters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRoleDelimiters.cpp' object='libopenhlx_common_a-CommandRoleDelimiters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRoleDelimiters.o `test -f 'CommandRoleDelimiters.cpp' || echo '$(srcdir)/'`CommandRoleDelimiters.cpp

libopenhlx_common_a-CommandRoleDelimiters.obj: CommandRoleDelimiters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandRoleDelimiters.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Tpo -c -o libopenhlx_common_a-CommandRoleDelimiters.obj `if test -f 'CommandRoleDelimiters.cpp'; then $(CYGPATH_W) 'CommandRoleDelimiters.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRoleDelimiters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Tpo $(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRoleDelimiters.cpp' object='libopenhlx_common_a-CommandRoleDelimiters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandRoleDelimiters.obj `if test -f 'CommandRoleDelimiters.cpp'; then $(CYGPATH_W) 'CommandRoleDelimiters.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRoleDelimiters.cpp'; fi`

libopenhlx_common_a-CommandSourceBufferBases.o: CommandSourceBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandSourceBufferBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Tpo -c -o libopenhlx_common_a-CommandSourceBufferBases.o `test -f 'CommandSourceBufferBases.cpp' || echo '$(srcdir)/'`CommandSourceBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourceBufferBases.cpp' object='libopenhlx_common_a-CommandSourceBufferBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandSourceBufferBases.o `test -f 'CommandSourceBufferBases.cpp' || echo '$(srcdir)/'`CommandSourceBufferBases.cpp

libopenhlx_common_a-CommandSourceBufferBases.obj: CommandSourceBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandSourceBufferBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Tpo -c -o libopenhlx_common_a-CommandSourceBufferBases.obj `if test -f 'CommandSourceBufferBases.cpp'; then $(CYGPATH_W) 'CommandSourceBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourceBufferBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourceBufferBases.cpp' object='libopenhlx_common_a-CommandSourceBufferBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandSourceBufferBases.obj `if test -f 'CommandSourceBufferBases.cpp'; then $(CYGPATH_W) 'CommandSourceBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourceBufferBases.cpp'; fi`

libopenhlx_common_a-CommandSourcesRegularExpressionBases.o: CommandSourcesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandSourcesRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandSourcesRegularExpressionBases.o `test -f 'CommandSourcesRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandSourcesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourcesRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandSourcesRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandSourcesRegularExpressionBases.o `test -f 'CommandSourcesRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandSourcesRegularExpressionBases.cpp

libopenhlx_common_a-CommandSourcesRegularExpressionBases.obj: CommandSourcesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandSourcesRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandSourcesRegularExpressionBases.obj `if test -f 'CommandSourcesRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandSourcesRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourcesRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourcesRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandSourcesRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandSourcesRegularExpressionBases.obj `if test -f 'CommandSourcesRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandSourcesRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourcesRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-CommandToneBufferBasis.o: CommandToneBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandToneBufferBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Tpo -c -o libopenhlx_common_a-CommandToneBufferBasis.o `test -f 'CommandToneBufferBasis.cpp' || echo '$(srcdir)/'`CommandToneBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandToneBufferBasis.cpp' object='libopenhlx_common_a-CommandToneBufferBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandToneBufferBasis.o `test -f 'CommandToneBufferBasis.cpp' || echo '$(srcdir)/'`CommandToneBufferBasis.cpp

libopenhlx_common_a-CommandToneBufferBasis.obj: CommandToneBufferBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandToneBufferBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Tpo -c -o libopenhlx_common_a-CommandToneBufferBasis.obj `if test -f 'CommandToneBufferBasis.cpp'; then $(CYGPATH_W) 'CommandToneBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandToneBufferBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Tpo $(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandToneBufferBasis.cpp' object='libopenhlx_common_a-CommandToneBufferBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandToneBufferBasis.obj `if test -f 'CommandToneBufferBasis.cpp'; then $(CYGPATH_W) 'CommandToneBufferBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandToneBufferBasis.cpp'; fi`

libopenhlx_common_a-CommandVolumeBufferBases.o: CommandVolumeBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandVolumeBufferBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Tpo -c -o libopenhlx_common_a-CommandVolumeBufferBases.o `test -f 'CommandVolumeBufferBases.cpp' || echo '$(srcdir)/'`CommandVolumeBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandVolumeBufferBases.cpp' object='libopenhlx_common_a-CommandVolumeBufferBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandVolumeBufferBases.o `test -f 'CommandVolumeBufferBases.cpp' || echo '$(srcdir)/'`CommandVolumeBufferBases.cpp

libopenhlx_common_a-CommandVolumeBufferBases.obj: CommandVolumeBufferBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandVolumeBufferBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Tpo -c -o libopenhlx_common_a-CommandVolumeBufferBases.obj `if test -f 'CommandVolumeBufferBases.cpp'; then $(CYGPATH_W) 'CommandVolumeBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandVolumeBufferBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandVolumeBufferBases.cpp' object='libopenhlx_common_a-CommandVolumeBufferBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandVolumeBufferBases.obj `if test -f 'CommandVolumeBufferBases.cpp'; then $(CYGPATH_W) 'CommandVolumeBufferBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandVolumeBufferBases.cpp'; fi`

libopenhlx_common_a-CommandZonesRegularExpressionBases.o: CommandZonesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandZonesRegularExpressionBases.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandZonesRegularExpressionBases.o `test -f 'CommandZonesRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandZonesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandZonesRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandZonesRegularExpressionBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandZonesRegularExpressionBases.o `test -f 'CommandZonesRegularExpressionBases.cpp' || echo '$(srcdir)/'`CommandZonesRegularExpressionBases.cpp

libopenhlx_common_a-CommandZonesRegularExpressionBases.obj: CommandZonesRegularExpressionBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-CommandZonesRegularExpressionBases.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Tpo -c -o libopenhlx_common_a-CommandZonesRegularExpressionBases.obj `if test -f 'CommandZonesRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandZonesRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandZonesRegularExpressionBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Tpo $(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandZonesRegularExpressionBases.cpp' object='libopenhlx_common_a-CommandZonesRegularExpressionBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-CommandZonesRegularExpressionBases.obj `if test -f 'CommandZonesRegularExpressionBases.cpp'; then $(CYGPATH_W) 'CommandZonesRegularExpressionBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandZonesRegularExpressionBases.cpp'; fi`

libopenhlx_common_a-ConfigurationControllerBasis.o: ConfigurationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConfigurationControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Tpo -c -o libopenhlx_common_a-ConfigurationControllerBasis.o `test -f 'ConfigurationControllerBasis.cpp' || echo '$(srcdir)/'`ConfigurationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerBasis.cpp' object='libopenhlx_common_a-ConfigurationControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConfigurationControllerBasis.o `test -f 'ConfigurationControllerBasis.cpp' || echo '$(srcdir)/'`ConfigurationControllerBasis.cpp

libopenhlx_common_a-ConfigurationControllerBasis.obj: ConfigurationControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConfigurationControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Tpo -c -o libopenhlx_common_a-ConfigurationControllerBasis.obj `if test -f 'ConfigurationControllerBasis.cpp'; then $(CYGPATH_W) 'ConfigurationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerBasis.cpp' object='libopenhlx_common_a-ConfigurationControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConfigurationControllerBasis.obj `if test -f 'ConfigurationControllerBasis.cpp'; then $(CYGPATH_W) 'ConfigurationControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerBasis.cpp'; fi`

libopenhlx_common_a-ConnectionBasis.o: ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConnectionBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Tpo -c -o libopenhlx_common_a-ConnectionBasis.o `test -f 'ConnectionBasis.cpp' || echo '$(srcdir)/'`ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasis.cpp' object='libopenhlx_common_a-ConnectionBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConnectionBasis.o `test -f 'ConnectionBasis.cpp' || echo '$(srcdir)/'`ConnectionBasis.cpp

libopenhlx_common_a-ConnectionBasis.obj: ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConnectionBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Tpo -c -o libopenhlx_common_a-ConnectionBasis.obj `if test -f 'ConnectionBasis.cpp'; then $(CYGPATH_W) 'ConnectionBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasis.cpp' object='libopenhlx_common_a-ConnectionBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConnectionBasis.obj `if test -f 'ConnectionBasis.cpp'; then $(CYGPATH_W) 'ConnectionBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasis.cpp'; fi`

libopenhlx_common_a-ConnectionBuffer.o: ConnectionBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConnectionBuffer.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Tpo -c -o libopenhlx_common_a-ConnectionBuffer.o `test -f 'ConnectionBuffer.cpp' || echo '$(srcdir)/'`ConnectionBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBuffer.cpp' object='libopenhlx_common_a-ConnectionBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConnectionBuffer.o `test -f 'ConnectionBuffer.cpp' || echo '$(srcdir)/'`ConnectionBuffer.cpp

libopenhlx_common_a-ConnectionBuffer.obj: ConnectionBuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConnectionBuffer.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Tpo -c -o libopenhlx_common_a-ConnectionBuffer.obj `if test -f 'ConnectionBuffer.cpp'; then $(CYGPATH_W) 'ConnectionBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Tpo $(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBuffer.cpp' object='libopenhlx_common_a-ConnectionBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConnectionBuffer.obj `if test -f 'ConnectionBuffer.cpp'; then $(CYGPATH_W) 'ConnectionBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBuffer.cpp'; fi`

libopenhlx_common_a-ConnectionManagerBasis.o: ConnectionManagerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConnectionManagerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Tpo -c -o libopenhlx_common_a-ConnectionManagerBasis.o `test -f 'ConnectionManagerBasis.cpp' || echo '$(srcdir)/'`ConnectionManagerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionManagerBasis.cpp' object='libopenhlx_common_a-ConnectionManagerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConnectionManagerBasis.o `test -f 'ConnectionManagerBasis.cpp' || echo '$(srcdir)/'`ConnectionManagerBasis.cpp

libopenhlx_common_a-ConnectionManagerBasis.obj: ConnectionManagerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ConnectionManagerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Tpo -c -o libopenhlx_common_a-ConnectionManagerBasis.obj `if test -f 'ConnectionManagerBasis.cpp'; then $(CYGPATH_W) 'ConnectionManagerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManagerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionManagerBasis.cpp' object='libopenhlx_common_a-ConnectionManagerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ConnectionManagerBasis.obj `if test -f 'ConnectionManagerBasis.cpp'; then $(CYGPATH_W) 'ConnectionManagerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManagerBasis.cpp'; fi`

libopenhlx_common_a-EqualizerPresetsControllerBasis.o: EqualizerPresetsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-EqualizerPresetsControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Tpo -c -o libopenhlx_common_a-EqualizerPresetsControllerBasis.o `test -f 'EqualizerPresetsControllerBasis.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerBasis.cpp' object='libopenhlx_common_a-EqualizerPresetsControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-EqualizerPresetsControllerBasis.o `test -f 'EqualizerPresetsControllerBasis.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerBasis.cpp

libopenhlx_common_a-EqualizerPresetsControllerBasis.obj: EqualizerPresetsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-EqualizerPresetsControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Tpo -c -o libopenhlx_common_a-EqualizerPresetsControllerBasis.obj `if test -f 'EqualizerPresetsControllerBasis.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerBasis.cpp' object='libopenhlx_common_a-EqualizerPresetsControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-EqualizerPresetsControllerBasis.obj `if test -f 'EqualizerPresetsControllerBasis.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerBasis.cpp'; fi`

libopenhlx_common_a-FavoritesControllerBasis.o: FavoritesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-FavoritesControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Tpo -c -o libopenhlx_common_a-FavoritesControllerBasis.o `test -f 'FavoritesControllerBasis.cpp' || echo '$(srcdir)/'`FavoritesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerBasis.cpp' object='libopenhlx_common_a-FavoritesControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-FavoritesControllerBasis.o `test -f 'FavoritesControllerBasis.cpp' || echo '$(srcdir)/'`FavoritesControllerBasis.cpp

libopenhlx_common_a-FavoritesControllerBasis.obj: FavoritesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-FavoritesControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Tpo -c -o libopenhlx_common_a-FavoritesControllerBasis.obj `if test -f 'FavoritesControllerBasis.cpp'; then $(CYGPATH_W) 'FavoritesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerBasis.cpp' object='libopenhlx_common_a-FavoritesControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-FavoritesControllerBasis.obj `if test -f 'FavoritesControllerBasis.cpp'; then $(CYGPATH_W) 'FavoritesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerBasis.cpp'; fi`

libopenhlx_common_a-FrontPanelControllerBasis.o: FrontPanelControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-FrontPanelControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Tpo -c -o libopenhlx_common_a-FrontPanelControllerBasis.o `test -f 'FrontPanelControllerBasis.cpp' || echo '$(srcdir)/'`FrontPanelControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerBasis.cpp' object='libopenhlx_common_a-FrontPanelControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-FrontPanelControllerBasis.o `test -f 'FrontPanelControllerBasis.cpp' || echo '$(srcdir)/'`FrontPanelControllerBasis.cpp

libopenhlx_common_a-FrontPanelControllerBasis.obj: FrontPanelControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-FrontPanelControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Tpo -c -o libopenhlx_common_a-FrontPanelControllerBasis.obj `if test -f 'FrontPanelControllerBasis.cpp'; then $(CYGPATH_W) 'FrontPanelControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerBasis.cpp' object='libopenhlx_common_a-FrontPanelControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-FrontPanelControllerBasis.obj `if test -f 'FrontPanelControllerBasis.cpp'; then $(CYGPATH_W) 'FrontPanelControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerBasis.cpp'; fi`

libopenhlx_common_a-GroupsControllerBasis.o: GroupsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-GroupsControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Tpo -c -o libopenhlx_common_a-GroupsControllerBasis.o `test -f 'GroupsControllerBasis.cpp' || echo '$(srcdir)/'`GroupsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerBasis.cpp' object='libopenhlx_common_a-GroupsControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-GroupsControllerBasis.o `test -f 'GroupsControllerBasis.cpp' || echo '$(srcdir)/'`GroupsControllerBasis.cpp

libopenhlx_common_a-GroupsControllerBasis.obj: GroupsControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-GroupsControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Tpo -c -o libopenhlx_common_a-GroupsControllerBasis.obj `if test -f 'GroupsControllerBasis.cpp'; then $(CYGPATH_W) 'GroupsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerBasis.cpp' object='libopenhlx_common_a-GroupsControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-GroupsControllerBasis.obj `if test -f 'GroupsControllerBasis.cpp'; then $(CYGPATH_W) 'GroupsControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerBasis.cpp'; fi`

libopenhlx_common_a-HostURL.o: HostURL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-HostURL.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-HostURL.Tpo -c -o libopenhlx_common_a-HostURL.o `test -f 'HostURL.cpp' || echo '$(srcdir)/'`HostURL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-HostURL.Tpo $(DEPDIR)/libopenhlx_common_a-HostURL.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HostURL.cpp' object='libopenhlx_common_a-HostURL.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-HostURL.o `test -f 'HostURL.cpp' || echo '$(srcdir)/'`HostURL.cpp

libopenhlx_common_a-HostURL.obj: HostURL.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-HostURL.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-HostURL.Tpo -c -o libopenhlx_common_a-HostURL.obj `if test -f 'HostURL.cpp'; then $(CYGPATH_W) 'HostURL.cpp'; else $(CYGPATH_W) '$(srcdir)/HostURL.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-HostURL.Tpo $(DEPDIR)/libopenhlx_common_a-HostURL.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HostURL.cpp' object='libopenhlx_common_a-HostURL.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-HostURL.obj `if test -f 'HostURL.cpp'; then $(CYGPATH_W) 'HostURL.cpp'; else $(CYGPATH_W) '$(srcdir)/HostURL.cpp'; fi`

libopenhlx_common_a-HostURLAddress.o: HostURLAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-HostURLAddress.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-HostURLAddress.Tpo -c -o libopenhlx_common_a-HostURLAddress.o `test -f 'HostURLAddress.cpp' || echo '$(srcdir)/'`HostURLAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-HostURLAddress.Tpo $(DEPDIR)/libopenhlx_common_a-HostURLAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HostURLAddress.cpp' object='libopenhlx_common_a-HostURLAddress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-HostURLAddress.o `test -f 'HostURLAddress.cpp' || echo '$(srcdir)/'`HostURLAddress.cpp

libopenhlx_common_a-HostURLAddress.obj: HostURLAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-HostURLAddress.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-HostURLAddress.Tpo -c -o libopenhlx_common_a-HostURLAddress.obj `if test -f 'HostURLAddress.cpp'; then $(CYGPATH_W) 'HostURLAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/HostURLAddress.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-HostURLAddress.Tpo $(DEPDIR)/libopenhlx_common_a-HostURLAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HostURLAddress.cpp' object='libopenhlx_common_a-HostURLAddress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-HostURLAddress.obj `if test -f 'HostURLAddress.cpp'; then $(CYGPATH_W) 'HostURLAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/HostURLAddress.cpp'; fi`

libopenhlx_common_a-InfraredControllerBasis.o: InfraredControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-InfraredControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Tpo -c -o libopenhlx_common_a-InfraredControllerBasis.o `test -f 'InfraredControllerBasis.cpp' || echo '$(srcdir)/'`InfraredControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerBasis.cpp' object='libopenhlx_common_a-InfraredControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-InfraredControllerBasis.o `test -f 'InfraredControllerBasis.cpp' || echo '$(srcdir)/'`InfraredControllerBasis.cpp

libopenhlx_common_a-InfraredControllerBasis.obj: InfraredControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-InfraredControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Tpo -c -o libopenhlx_common_a-InfraredControllerBasis.obj `if test -f 'InfraredControllerBasis.cpp'; then $(CYGPATH_W) 'InfraredControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerBasis.cpp' object='libopenhlx_common_a-InfraredControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-InfraredControllerBasis.obj `if test -f 'InfraredControllerBasis.cpp'; then $(CYGPATH_W) 'InfraredControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerBasis.cpp'; fi`

libopenhlx_common_a-IPAddress.o: IPAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-IPAddress.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-IPAddress.Tpo -c -o libopenhlx_common_a-IPAddress.o `test -f 'IPAddress.cpp' || echo '$(srcdir)/'`IPAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-IPAddress.Tpo $(DEPDIR)/libopenhlx_common_a-IPAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IPAddress.cpp' object='libopenhlx_common_a-IPAddress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-IPAddress.o `test -f 'IPAddress.cpp' || echo '$(srcdir)/'`IPAddress.cpp

libopenhlx_common_a-IPAddress.obj: IPAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-IPAddress.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-IPAddress.Tpo -c -o libopenhlx_common_a-IPAddress.obj `if test -f 'IPAddress.cpp'; then $(CYGPATH_W) 'IPAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/IPAddress.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-IPAddress.Tpo $(DEPDIR)/libopenhlx_common_a-IPAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='IPAddress.cpp' object='libopenhlx_common_a-IPAddress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-IPAddress.obj `if test -f 'IPAddress.cpp'; then $(CYGPATH_W) 'IPAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/IPAddress.cpp'; fi`

libopenhlx_common_a-NetworkControllerBasis.o: NetworkControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-NetworkControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Tpo -c -o libopenhlx_common_a-NetworkControllerBasis.o `test -f 'NetworkControllerBasis.cpp' || echo '$(srcdir)/'`NetworkControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerBasis.cpp' object='libopenhlx_common_a-NetworkControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-NetworkControllerBasis.o `test -f 'NetworkControllerBasis.cpp' || echo '$(srcdir)/'`NetworkControllerBasis.cpp

libopenhlx_common_a-NetworkControllerBasis.obj: NetworkControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-NetworkControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Tpo -c -o libopenhlx_common_a-NetworkControllerBasis.obj `if test -f 'NetworkControllerBasis.cpp'; then $(CYGPATH_W) 'NetworkControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerBasis.cpp' object='libopenhlx_common_a-NetworkControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-NetworkControllerBasis.obj `if test -f 'NetworkControllerBasis.cpp'; then $(CYGPATH_W) 'NetworkControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerBasis.cpp'; fi`

libopenhlx_common_a-OutputStringStream.o: OutputStringStream.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-OutputStringStream.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-OutputStringStream.Tpo -c -o libopenhlx_common_a-OutputStringStream.o `test -f 'OutputStringStream.cpp' || echo '$(srcdir)/'`OutputStringStream.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-OutputStringStream.Tpo $(DEPDIR)/libopenhlx_common_a-OutputStringStream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='OutputStringStream.cpp' object='libopenhlx_common_a-OutputStringStream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-OutputStringStream.o `test -f 'OutputStringStream.cpp' || echo '$(srcdir)/'`OutputStringStream.cpp

libopenhlx_common_a-OutputStringStream.obj: OutputStringStream.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-OutputStringStream.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-OutputStringStream.Tpo -c -o libopenhlx_common_a-OutputStringStream.obj `if test -f 'OutputStringStream.cpp'; then $(CYGPATH_W) 'OutputStringStream.cpp'; else $(CYGPATH_W) '$(srcdir)/OutputStringStream.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-OutputStringStream.Tpo $(DEPDIR)/libopenhlx_common_a-OutputStringStream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='OutputStringStream.cpp' object='libopenhlx_common_a-OutputStringStream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-OutputStringStream.obj `if test -f 'OutputStringStream.cpp'; then $(CYGPATH_W) 'OutputStringStream.cpp'; else $(CYGPATH_W) '$(srcdir)/OutputStringStream.cpp'; fi`

libopenhlx_common_a-RegularExpression.o: RegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-RegularExpression.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-RegularExpression.Tpo -c -o libopenhlx_common_a-RegularExpression.o `test -f 'RegularExpression.cpp' || echo '$(srcdir)/'`RegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-RegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-RegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RegularExpression.cpp' object='libopenhlx_common_a-RegularExpression.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-RegularExpression.o `test -f 'RegularExpression.cpp' || echo '$(srcdir)/'`RegularExpression.cpp

libopenhlx_common_a-RegularExpression.obj: RegularExpression.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-RegularExpression.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-RegularExpression.Tpo -c -o libopenhlx_common_a-RegularExpression.obj `if test -f 'RegularExpression.cpp'; then $(CYGPATH_W) 'RegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/RegularExpression.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-RegularExpression.Tpo $(DEPDIR)/libopenhlx_common_a-RegularExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RegularExpression.cpp' object='libopenhlx_common_a-RegularExpression.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-RegularExpression.obj `if test -f 'RegularExpression.cpp'; then $(CYGPATH_W) 'RegularExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/RegularExpression.cpp'; fi`

libopenhlx_common_a-RunLoopParameters.o: RunLoopParameters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-RunLoopParameters.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Tpo -c -o libopenhlx_common_a-RunLoopParameters.o `test -f 'RunLoopParameters.cpp' || echo '$(srcdir)/'`RunLoopParameters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Tpo $(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RunLoopParameters.cpp' object='libopenhlx_common_a-RunLoopParameters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-RunLoopParameters.o `test -f 'RunLoopParameters.cpp' || echo '$(srcdir)/'`RunLoopParameters.cpp

libopenhlx_common_a-RunLoopParameters.obj: RunLoopParameters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-RunLoopParameters.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Tpo -c -o libopenhlx_common_a-RunLoopParameters.obj `if test -f 'RunLoopParameters.cpp'; then $(CYGPATH_W) 'RunLoopParameters.cpp'; else $(CYGPATH_W) '$(srcdir)/RunLoopParameters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Tpo $(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RunLoopParameters.cpp' object='libopenhlx_common_a-RunLoopParameters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-RunLoopParameters.obj `if test -f 'RunLoopParameters.cpp'; then $(CYGPATH_W) 'RunLoopParameters.cpp'; else $(CYGPATH_W) '$(srcdir)/RunLoopParameters.cpp'; fi`

libopenhlx_common_a-RunLoopQueue.o: RunLoopQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-RunLoopQueue.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Tpo -c -o libopenhlx_common_a-RunLoopQueue.o `test -f 'RunLoopQueue.cpp' || echo '$(srcdir)/'`RunLoopQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Tpo $(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RunLoopQueue.cpp' object='libopenhlx_common_a-RunLoopQueue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-RunLoopQueue.o `test -f 'RunLoopQueue.cpp' || echo '$(srcdir)/'`RunLoopQueue.cpp

libopenhlx_common_a-RunLoopQueue.obj: RunLoopQueue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-RunLoopQueue.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Tpo -c -o libopenhlx_common_a-RunLoopQueue.obj `if test -f 'RunLoopQueue.cpp'; then $(CYGPATH_W) 'RunLoopQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/RunLoopQueue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Tpo $(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RunLoopQueue.cpp' object='libopenhlx_common_a-RunLoopQueue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-RunLoopQueue.obj `if test -f 'RunLoopQueue.cpp'; then $(CYGPATH_W) 'RunLoopQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/RunLoopQueue.cpp'; fi`

libopenhlx_common_a-SocketAddress.o: SocketAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-SocketAddress.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-SocketAddress.Tpo -c -o libopenhlx_common_a-SocketAddress.o `test -f 'SocketAddress.cpp' || echo '$(srcdir)/'`SocketAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-SocketAddress.Tpo $(DEPDIR)/libopenhlx_common_a-SocketAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SocketAddress.cpp' object='libopenhlx_common_a-SocketAddress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-SocketAddress.o `test -f 'SocketAddress.cpp' || echo '$(srcdir)/'`SocketAddress.cpp

libopenhlx_common_a-SocketAddress.obj: SocketAddress.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-SocketAddress.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-SocketAddress.Tpo -c -o libopenhlx_common_a-SocketAddress.obj `if test -f 'SocketAddress.cpp'; then $(CYGPATH_W) 'SocketAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/SocketAddress.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-SocketAddress.Tpo $(DEPDIR)/libopenhlx_common_a-SocketAddress.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SocketAddress.cpp' object='libopenhlx_common_a-SocketAddress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-SocketAddress.obj `if test -f 'SocketAddress.cpp'; then $(CYGPATH_W) 'SocketAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/SocketAddress.cpp'; fi`

libopenhlx_common_a-SourcesControllerBasis.o: SourcesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-SourcesControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Tpo -c -o libopenhlx_common_a-SourcesControllerBasis.o `test -f 'SourcesControllerBasis.cpp' || echo '$(srcdir)/'`SourcesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerBasis.cpp' object='libopenhlx_common_a-SourcesControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-SourcesControllerBasis.o `test -f 'SourcesControllerBasis.cpp' || echo '$(srcdir)/'`SourcesControllerBasis.cpp

libopenhlx_common_a-SourcesControllerBasis.obj: SourcesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-SourcesControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Tpo -c -o libopenhlx_common_a-SourcesControllerBasis.obj `if test -f 'SourcesControllerBasis.cpp'; then $(CYGPATH_W) 'SourcesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerBasis.cpp' object='libopenhlx_common_a-SourcesControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-SourcesControllerBasis.obj `if test -f 'SourcesControllerBasis.cpp'; then $(CYGPATH_W) 'SourcesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerBasis.cpp'; fi`

libopenhlx_common_a-Timeout.o: Timeout.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-Timeout.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-Timeout.Tpo -c -o libopenhlx_common_a-Timeout.o `test -f 'Timeout.cpp' || echo '$(srcdir)/'`Timeout.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-Timeout.Tpo $(DEPDIR)/libopenhlx_common_a-Timeout.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Timeout.cpp' object='libopenhlx_common_a-Timeout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-Timeout.o `test -f 'Timeout.cpp' || echo '$(srcdir)/'`Timeout.cpp

libopenhlx_common_a-Timeout.obj: Timeout.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-Timeout.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-Timeout.Tpo -c -o libopenhlx_common_a-Timeout.obj `if test -f 'Timeout.cpp'; then $(CYGPATH_W) 'Timeout.cpp'; else $(CYGPATH_W) '$(srcdir)/Timeout.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-Timeout.Tpo $(DEPDIR)/libopenhlx_common_a-Timeout.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Timeout.cpp' object='libopenhlx_common_a-Timeout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-Timeout.obj `if test -f 'Timeout.cpp'; then $(CYGPATH_W) 'Timeout.cpp'; else $(CYGPATH_W) '$(srcdir)/Timeout.cpp'; fi`

libopenhlx_common_a-Timer.o: Timer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-Timer.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-Timer.Tpo -c -o libopenhlx_common_a-Timer.o `test -f 'Timer.cpp' || echo '$(srcdir)/'`Timer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-Timer.Tpo $(DEPDIR)/libopenhlx_common_a-Timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Timer.cpp' object='libopenhlx_common_a-Timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-Timer.o `test -f 'Timer.cpp' || echo '$(srcdir)/'`Timer.cpp

libopenhlx_common_a-Timer.obj: Timer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-Timer.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-Timer.Tpo -c -o libopenhlx_common_a-Timer.obj `if test -f 'Timer.cpp'; then $(CYGPATH_W) 'Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Timer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-Timer.Tpo $(DEPDIR)/libopenhlx_common_a-Timer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Timer.cpp' object='libopenhlx_common_a-Timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-Timer.obj `if test -f 'Timer.cpp'; then $(CYGPATH_W) 'Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Timer.cpp'; fi`

libopenhlx_common_a-Version.o: Version.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-Version.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-Version.Tpo -c -o libopenhlx_common_a-Version.o `test -f 'Version.cpp' || echo '$(srcdir)/'`Version.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-Version.Tpo $(DEPDIR)/libopenhlx_common_a-Version.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Version.cpp' object='libopenhlx_common_a-Version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-Version.o `test -f 'Version.cpp' || echo '$(srcdir)/'`Version.cpp

libopenhlx_common_a-Version.obj: Version.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-Version.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-Version.Tpo -c -o libopenhlx_common_a-Version.obj `if test -f 'Version.cpp'; then $(CYGPATH_W) 'Version.cpp'; else $(CYGPATH_W) '$(srcdir)/Version.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-Version.Tpo $(DEPDIR)/libopenhlx_common_a-Version.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Version.cpp' object='libopenhlx_common_a-Version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-Version.obj `if test -f 'Version.cpp'; then $(CYGPATH_W) 'Version.cpp'; else $(CYGPATH_W) '$(srcdir)/Version.cpp'; fi`

libopenhlx_common_a-ZonesControllerBasis.o: ZonesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ZonesControllerBasis.o -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Tpo -c -o libopenhlx_common_a-ZonesControllerBasis.o `test -f 'ZonesControllerBasis.cpp' || echo '$(srcdir)/'`ZonesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerBasis.cpp' object='libopenhlx_common_a-ZonesControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ZonesControllerBasis.o `test -f 'ZonesControllerBasis.cpp' || echo '$(srcdir)/'`ZonesControllerBasis.cpp

libopenhlx_common_a-ZonesControllerBasis.obj: ZonesControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopenhlx_common_a-ZonesControllerBasis.obj -MD -MP -MF $(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Tpo -c -o libopenhlx_common_a-ZonesControllerBasis.obj `if test -f 'ZonesControllerBasis.cpp'; then $(CYGPATH_W) 'ZonesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Tpo $(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerBasis.cpp' object='libopenhlx_common_a-ZonesControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopenhlx_common_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopenhlx_common_a-ZonesControllerBasis.obj `if test -f 'ZonesControllerBasis.cpp'; then $(CYGPATH_W) 'ZonesControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerBasis.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libopenhlx_common_a_includeHEADERS: $(libopenhlx_common_a_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libopenhlx_common_a_include_HEADERS)'; test -n "$(libopenhlx_common_a_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libopenhlx_common_a_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libopenhlx_common_a_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libopenhlx_common_a_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libopenhlx_common_a_includedir)" || exit $$?; \
	done

uninstall-libopenhlx_common_a_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libopenhlx_common_a_include_HEADERS)'; test -n "$(libopenhlx_common_a_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libopenhlx_common_a_includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libopenhlx_common_a_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-HostURL.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-HostURLAddress.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-IPAddress.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-OutputStringStream.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-RegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-SocketAddress.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-Timeout.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-Timer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-Version.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-libopenhlx_common_a_includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/libopenhlx_common_a-ApplicationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandBalanceBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandConfigurationRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandDelimitedRegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandEqualizerPresetsRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandFavoritesRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandFrontPanelRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandGroupsRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandInfraredBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandInfraredRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandNameSetBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandNetworkBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandNetworkRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandPropertyBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandQueryBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimitedRegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandRoleDelimiters.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandSourceBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandSourcesRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandToneBufferBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandVolumeBufferBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-CommandZonesRegularExpressionBases.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConfigurationControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConnectionBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConnectionBuffer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ConnectionManagerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-EqualizerPresetsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-FavoritesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-FrontPanelControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-GroupsControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-HostURL.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-HostURLAddress.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-IPAddress.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-InfraredControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-NetworkControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-OutputStringStream.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-RegularExpression.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-RunLoopParameters.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-RunLoopQueue.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-SocketAddress.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-SourcesControllerBasis.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-Timeout.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-Timer.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-Version.Po
	-rm -f ./$(DEPDIR)/libopenhlx_common_a-ZonesControllerBasis.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libLIBRARIES \
	uninstall-libopenhlx_common_a_includeHEADERS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES \
	install-libopenhlx_common_a_includeHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLIBRARIES \
	uninstall-libopenhlx_common_a_includeHEADERS

.PRECIOUS: Makefile


include $(abs_top_nlbuild_autotools_dir)/automake/pre.am

# Ensure that libraries are built before trying to run any recursive
# targets from SUBDIRS that might depend on them.

AM_RECURSIVE_TARGETS: $(LIBRARIES)

include $(abs_top_nlbuild_autotools_dir)/automake/post.am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
