# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#    Copyright (c) 2019-2021 Grant Erickson
#    All rights reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an "AS
#    IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
#    express or implied.  See the License for the specific language
#    governing permissions and limitations under the License.
#

#
#    Description:
#      This file is the GNU automake template for a HLX control
#      server simulator daemon program executable.
#


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = hlxsimd$(EXEEXT)
subdir = src/hlxsimd
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp \
	$(noinst_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/third_party/cycript/repo/m4/framework.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/ax_check_compiler.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_coverage_reporting.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_debug.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_docs.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_optimization.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_tests.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_enable_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_filtered_canonical.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_werror.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/autoconf/m4/nl_with_package.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/libtool.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltoptions.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltsugar.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/ltversion.m4 \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/include/openhlx-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_hlxsimd_OBJECTS = hlxsimd-CommandBalanceResponseBasis.$(OBJEXT) \
	hlxsimd-CommandEqualizerBandResponseBasis.$(OBJEXT) \
	hlxsimd-CommandErrorResponse.$(OBJEXT) \
	hlxsimd-CommandManager.$(OBJEXT) \
	hlxsimd-CommandNameSetResponseBasis.$(OBJEXT) \
	hlxsimd-CommandPropertyResponseBases.$(OBJEXT) \
	hlxsimd-CommandQueryResponseBasis.$(OBJEXT) \
	hlxsimd-CommandRequestBasis.$(OBJEXT) \
	hlxsimd-CommandResponseBasis.$(OBJEXT) \
	hlxsimd-CommandSourceResponseBases.$(OBJEXT) \
	hlxsimd-CommandVolumeResponseBases.$(OBJEXT) \
	hlxsimd-ConfigurationController.$(OBJEXT) \
	hlxsimd-ConfigurationControllerCommands.$(OBJEXT) \
	hlxsimd-ConnectionBasis.$(OBJEXT) \
	hlxsimd-ConnectionBasisDelegate.$(OBJEXT) \
	hlxsimd-ConnectionFactory.$(OBJEXT) \
	hlxsimd-ConnectionManager.$(OBJEXT) \
	hlxsimd-ConnectionTelnet.$(OBJEXT) \
	hlxsimd-ContainerControllerBasis.$(OBJEXT) \
	hlxsimd-ControllerBasis.$(OBJEXT) \
	hlxsimd-ControllerBasisDelegate.$(OBJEXT) \
	hlxsimd-EqualizerPresetsController.$(OBJEXT) \
	hlxsimd-EqualizerPresetsControllerCommands.$(OBJEXT) \
	hlxsimd-FavoritesController.$(OBJEXT) \
	hlxsimd-FavoritesControllerCommands.$(OBJEXT) \
	hlxsimd-FrontPanelController.$(OBJEXT) \
	hlxsimd-FrontPanelControllerCommands.$(OBJEXT) \
	hlxsimd-GroupsController.$(OBJEXT) \
	hlxsimd-GroupsControllerCommands.$(OBJEXT) \
	hlxsimd-HLXServerController.$(OBJEXT) \
	hlxsimd-InfraredController.$(OBJEXT) \
	hlxsimd-InfraredControllerCommands.$(OBJEXT) \
	hlxsimd-ListenerBasis.$(OBJEXT) \
	hlxsimd-ListenerBasisDelegate.$(OBJEXT) \
	hlxsimd-ListenerFactory.$(OBJEXT) \
	hlxsimd-ListenerTelnet.$(OBJEXT) \
	hlxsimd-NetworkController.$(OBJEXT) \
	hlxsimd-NetworkControllerCommands.$(OBJEXT) \
	hlxsimd-SourcesController.$(OBJEXT) \
	hlxsimd-SourcesControllerCommands.$(OBJEXT) \
	hlxsimd-Utilities.$(OBJEXT) hlxsimd-ZonesController.$(OBJEXT) \
	hlxsimd-ZonesControllerCommands.$(OBJEXT) \
	hlxsimd-hlxsimd.$(OBJEXT)
hlxsimd_OBJECTS = $(am_hlxsimd_OBJECTS)
hlxsimd_DEPENDENCIES =  \
	$(top_builddir)/src/lib/common/libopenhlx-common.a \
	$(top_builddir)/src/lib/model/libopenhlx-model.a \
	$(top_builddir)/src/lib/utilities/libopenhlx-utilities.a \
	$(top_builddir)/third_party/CFUtilities/repo/src/libCFUtilities.la \
	$(top_builddir)/third_party/LogUtilities/repo/src/libLogUtilities.la \
	$(top_builddir)/third_party/NuovationsUtilities/libNuovationsUtilities.a \
	$(top_builddir)/third_party/libtelnet/libtelnet.a
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
hlxsimd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(hlxsimd_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/include
depcomp = $(SHELL) \
	$(top_srcdir)/third_party/nlbuild-autotools/repo/third_party/autoconf/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(hlxsimd_SOURCES)
DIST_SOURCES = $(hlxsimd_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ASCIIDOC = @ASCIIDOC@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_LIBS = @BOOST_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFUTILITIES_CPPFLAGS = @CFUTILITIES_CPPFLAGS@
CFUTILITIES_LDFLAGS = @CFUTILITIES_LDFLAGS@
CFUTILITIES_LIBS = @CFUTILITIES_LIBS@
CFUTILITIES_SUBDIRS = @CFUTILITIES_SUBDIRS@
CF_CPPFLAGS = @CF_CPPFLAGS@
CF_LDFLAGS = @CF_LDFLAGS@
CF_LIBS = @CF_LIBS@
CLANG_FORMAT = @CLANG_FORMAT@
CMP = @CMP@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_USE_DOT = @DOXYGEN_USE_DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GENHTML = @GENHTML@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
HLXSIMD_DEFAULT_CONFIG_PATH = @HLXSIMD_DEFAULT_CONFIG_PATH@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBOPENHLX_VERSION_AGE = @LIBOPENHLX_VERSION_AGE@
LIBOPENHLX_VERSION_CURRENT = @LIBOPENHLX_VERSION_CURRENT@
LIBOPENHLX_VERSION_INFO = @LIBOPENHLX_VERSION_INFO@
LIBOPENHLX_VERSION_REVISION = @LIBOPENHLX_VERSION_REVISION@
LIBS = @LIBS@
LIBTELNET_CPPFLAGS = @LIBTELNET_CPPFLAGS@
LIBTELNET_LDFLAGS = @LIBTELNET_LDFLAGS@
LIBTELNET_LIBS = @LIBTELNET_LIBS@
LIBTELNET_SUBDIRS = @LIBTELNET_SUBDIRS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOGUTILITIES_CPPFLAGS = @LOGUTILITIES_CPPFLAGS@
LOGUTILITIES_LDFLAGS = @LOGUTILITIES_LDFLAGS@
LOGUTILITIES_LIBS = @LOGUTILITIES_LIBS@
LOGUTILITIES_SUBDIRS = @LOGUTILITIES_SUBDIRS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NLASSERT_CPPFLAGS = @NLASSERT_CPPFLAGS@
NLASSERT_LDFLAGS = @NLASSERT_LDFLAGS@
NLASSERT_LIBS = @NLASSERT_LIBS@
NLASSERT_SUBDIRS = @NLASSERT_SUBDIRS@
NLUNIT_TEST_CPPFLAGS = @NLUNIT_TEST_CPPFLAGS@
NLUNIT_TEST_LDFLAGS = @NLUNIT_TEST_LDFLAGS@
NLUNIT_TEST_LIBS = @NLUNIT_TEST_LIBS@
NLUNIT_TEST_SUBDIRS = @NLUNIT_TEST_SUBDIRS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJCOPY = @OBJCOPY@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENHLX_CF_SOURCE = @OPENHLX_CF_SOURCE@
OPENHLX_CF_SOURCE_CFLITE = @OPENHLX_CF_SOURCE_CFLITE@
OPENHLX_CF_SOURCE_FRAMEWORK = @OPENHLX_CF_SOURCE_FRAMEWORK@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PRETTY = @PRETTY@
PRETTY_ARGS = @PRETTY_ARGS@
PRETTY_CHECK = @PRETTY_CHECK@
PRETTY_CHECK_ARGS = @PRETTY_CHECK_ARGS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRE_CPPFLAGS = @TRE_CPPFLAGS@
TRE_LDFLAGS = @TRE_LDFLAGS@
TRE_LIBS = @TRE_LIBS@
VERSION = @VERSION@
XMLTO = @XMLTO@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_nlbuild_autotools_dir = @abs_top_nlbuild_autotools_dir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nl_filtered_build = @nl_filtered_build@
nl_filtered_build_cpu = @nl_filtered_build_cpu@
nl_filtered_build_os = @nl_filtered_build_os@
nl_filtered_build_vendor = @nl_filtered_build_vendor@
nl_filtered_host = @nl_filtered_host@
nl_filtered_host_cpu = @nl_filtered_host_cpu@
nl_filtered_host_os = @nl_filtered_host_os@
nl_filtered_host_vendor = @nl_filtered_host_vendor@
nl_filtered_target = @nl_filtered_target@
nl_filtered_target_cpu = @nl_filtered_target_cpu@
nl_filtered_target_os = @nl_filtered_target_os@
nl_filtered_target_vendor = @nl_filtered_target_vendor@
nlbuild_autotools_stem = @nlbuild_autotools_stem@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_HEADERS = \
    CommandBalanceResponseBasis.hpp                                          \
    CommandEqualizerBandResponseBasis.hpp                                    \
    CommandErrorResponse.hpp                                                 \
    CommandManager.hpp                                                       \
    CommandManagerDelegate.hpp                                               \
    CommandNameSetResponseBasis.hpp                                          \
    CommandPropertyResponseBases.hpp                                         \
    CommandQueryResponseBasis.hpp                                            \
    CommandRequestBasis.hpp                                                  \
    CommandResponseBasis.hpp                                                 \
    CommandSourceResponseBases.hpp                                           \
    CommandVolumeResponseBases.hpp                                           \
    ConfigurationController.hpp                                              \
    ConfigurationControllerCommands.hpp                                      \
    ConfigurationControllerDelegate.hpp                                      \
    ConnectionBasis.hpp                                                      \
    ConnectionBasisDelegate.hpp                                              \
    ConnectionFactory.hpp                                                    \
    ConnectionManager.hpp                                                    \
    ConnectionManagerDelegate.hpp                                            \
    ConnectionTelnet.hpp                                                     \
    ContainerControllerBasis.hpp                                             \
    ControllerBasis.hpp                                                      \
    ControllerBasisDelegate.hpp                                              \
    EqualizerBandModelDefaults.hpp                                           \
    EqualizerPresetsController.hpp                                           \
    EqualizerPresetsControllerCommands.hpp                                   \
    FavoritesController.hpp                                                  \
    FavoritesControllerCommands.hpp                                          \
    FrontPanelController.hpp                                                 \
    FrontPanelControllerCommands.hpp                                         \
    GroupsController.hpp                                                     \
    GroupsControllerCommands.hpp                                             \
    GroupsControllerDelegate.hpp                                             \
    HLXServerController.hpp                                                  \
    HLXServerControllerDelegate.hpp                                          \
    InfraredController.hpp                                                   \
    InfraredControllerCommands.hpp                                           \
    ListenerBasis.hpp                                                        \
    ListenerBasisAcceptDelegate.hpp                                          \
    ListenerBasisDelegate.hpp                                                \
    ListenerFactory.hpp                                                      \
    ListenerTelnet.hpp                                                       \
    NameModelDefaults.hpp                                                    \
    NetworkController.hpp                                                    \
    NetworkControllerCommands.hpp                                            \
    SourcesController.hpp                                                    \
    SourcesControllerCommands.hpp                                            \
    Utilities.hpp                                                            \
    ZonesController.hpp                                                      \
    ZonesControllerCommands.hpp                                              \
    $(NULL)

hlxsimd_CPPFLAGS = \
    -DHLXSIMD_DEFAULT_CONFIG_PATH=\"${HLXSIMD_DEFAULT_CONFIG_PATH}\"         \
    -I$(top_srcdir)/third_party/CFUtilities/repo/include                     \
    -I$(top_srcdir)/third_party/LogUtilities/repo/include                    \
    -I$(top_srcdir)/third_party/NuovationsUtilities/repo/include             \
    -I$(top_srcdir)/src/lib/common                                           \
    -I$(top_srcdir)/src/lib/model                                            \
    -I$(top_srcdir)/src/lib/utilities                                        \
    $(NULL)

hlxsimd_LDADD = \
    $(top_builddir)/src/lib/common/libopenhlx-common.a                       \
    $(top_builddir)/src/lib/model/libopenhlx-model.a                         \
    $(top_builddir)/src/lib/utilities/libopenhlx-utilities.a                 \
    $(top_builddir)/third_party/CFUtilities/repo/src/libCFUtilities.la       \
    $(top_builddir)/third_party/LogUtilities/repo/src/libLogUtilities.la     \
    $(top_builddir)/third_party/NuovationsUtilities/libNuovationsUtilities.a \
    $(top_builddir)/third_party/libtelnet/libtelnet.a                        \
    $(NULL)

hlxsimd_LDFLAGS = \
    -framework CoreFoundation                                                \
    -lboost_system                                                           \
    -lboost_filesystem                                                       \
    $(NULL)

hlxsimd_SOURCES = \
    CommandBalanceResponseBasis.cpp                                          \
    CommandEqualizerBandResponseBasis.cpp                                    \
    CommandErrorResponse.cpp                                                 \
    CommandManager.cpp                                                       \
    CommandNameSetResponseBasis.cpp                                          \
    CommandPropertyResponseBases.cpp                                         \
    CommandQueryResponseBasis.cpp                                            \
    CommandRequestBasis.cpp                                                  \
    CommandResponseBasis.cpp                                                 \
    CommandSourceResponseBases.cpp                                           \
    CommandVolumeResponseBases.cpp                                           \
    ConfigurationController.cpp                                              \
    ConfigurationControllerCommands.cpp                                      \
    ConnectionBasis.cpp                                                      \
    ConnectionBasisDelegate.cpp                                              \
    ConnectionFactory.cpp                                                    \
    ConnectionManager.cpp                                                    \
    ConnectionTelnet.cpp                                                     \
    ContainerControllerBasis.cpp                                             \
    ControllerBasis.cpp                                                      \
    ControllerBasisDelegate.cpp                                              \
    EqualizerPresetsController.cpp                                           \
    EqualizerPresetsControllerCommands.cpp                                   \
    FavoritesController.cpp                                                  \
    FavoritesControllerCommands.cpp                                          \
    FrontPanelController.cpp                                                 \
    FrontPanelControllerCommands.cpp                                         \
    GroupsController.cpp                                                     \
    GroupsControllerCommands.cpp                                             \
    HLXServerController.cpp                                                  \
    InfraredController.cpp                                                   \
    InfraredControllerCommands.cpp                                           \
    ListenerBasis.cpp                                                        \
    ListenerBasisDelegate.cpp                                                \
    ListenerFactory.cpp                                                      \
    ListenerTelnet.cpp                                                       \
    NetworkController.cpp                                                    \
    NetworkControllerCommands.cpp                                            \
    SourcesController.cpp                                                    \
    SourcesControllerCommands.cpp                                            \
    Utilities.cpp                                                            \
    ZonesController.cpp                                                      \
    ZonesControllerCommands.cpp                                              \
    hlxsimd.cpp                                                              \
    $(NULL)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/hlxsimd/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/hlxsimd/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

hlxsimd$(EXEEXT): $(hlxsimd_OBJECTS) $(hlxsimd_DEPENDENCIES) $(EXTRA_hlxsimd_DEPENDENCIES) 
	@rm -f hlxsimd$(EXEEXT)
	$(AM_V_CXXLD)$(hlxsimd_LINK) $(hlxsimd_OBJECTS) $(hlxsimd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandBalanceResponseBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandEqualizerBandResponseBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandErrorResponse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandNameSetResponseBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandPropertyResponseBases.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandQueryResponseBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandRequestBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandResponseBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandSourceResponseBases.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-CommandVolumeResponseBases.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ConfigurationController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ConfigurationControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ConnectionBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ConnectionBasisDelegate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ConnectionFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ConnectionManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ConnectionTelnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ContainerControllerBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ControllerBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ControllerBasisDelegate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-EqualizerPresetsController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-EqualizerPresetsControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-FavoritesController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-FavoritesControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-FrontPanelController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-FrontPanelControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-GroupsController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-GroupsControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-HLXServerController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-InfraredController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-InfraredControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ListenerBasis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ListenerBasisDelegate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ListenerFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ListenerTelnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-NetworkController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-NetworkControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-SourcesController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-SourcesControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-Utilities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ZonesController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-ZonesControllerCommands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hlxsimd-hlxsimd.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

hlxsimd-CommandBalanceResponseBasis.o: CommandBalanceResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandBalanceResponseBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandBalanceResponseBasis.Tpo -c -o hlxsimd-CommandBalanceResponseBasis.o `test -f 'CommandBalanceResponseBasis.cpp' || echo '$(srcdir)/'`CommandBalanceResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandBalanceResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandBalanceResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBalanceResponseBasis.cpp' object='hlxsimd-CommandBalanceResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandBalanceResponseBasis.o `test -f 'CommandBalanceResponseBasis.cpp' || echo '$(srcdir)/'`CommandBalanceResponseBasis.cpp

hlxsimd-CommandBalanceResponseBasis.obj: CommandBalanceResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandBalanceResponseBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandBalanceResponseBasis.Tpo -c -o hlxsimd-CommandBalanceResponseBasis.obj `if test -f 'CommandBalanceResponseBasis.cpp'; then $(CYGPATH_W) 'CommandBalanceResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBalanceResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandBalanceResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandBalanceResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandBalanceResponseBasis.cpp' object='hlxsimd-CommandBalanceResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandBalanceResponseBasis.obj `if test -f 'CommandBalanceResponseBasis.cpp'; then $(CYGPATH_W) 'CommandBalanceResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandBalanceResponseBasis.cpp'; fi`

hlxsimd-CommandEqualizerBandResponseBasis.o: CommandEqualizerBandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandEqualizerBandResponseBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandEqualizerBandResponseBasis.Tpo -c -o hlxsimd-CommandEqualizerBandResponseBasis.o `test -f 'CommandEqualizerBandResponseBasis.cpp' || echo '$(srcdir)/'`CommandEqualizerBandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandEqualizerBandResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandEqualizerBandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerBandResponseBasis.cpp' object='hlxsimd-CommandEqualizerBandResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandEqualizerBandResponseBasis.o `test -f 'CommandEqualizerBandResponseBasis.cpp' || echo '$(srcdir)/'`CommandEqualizerBandResponseBasis.cpp

hlxsimd-CommandEqualizerBandResponseBasis.obj: CommandEqualizerBandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandEqualizerBandResponseBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandEqualizerBandResponseBasis.Tpo -c -o hlxsimd-CommandEqualizerBandResponseBasis.obj `if test -f 'CommandEqualizerBandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandEqualizerBandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerBandResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandEqualizerBandResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandEqualizerBandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandEqualizerBandResponseBasis.cpp' object='hlxsimd-CommandEqualizerBandResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandEqualizerBandResponseBasis.obj `if test -f 'CommandEqualizerBandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandEqualizerBandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandEqualizerBandResponseBasis.cpp'; fi`

hlxsimd-CommandErrorResponse.o: CommandErrorResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandErrorResponse.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandErrorResponse.Tpo -c -o hlxsimd-CommandErrorResponse.o `test -f 'CommandErrorResponse.cpp' || echo '$(srcdir)/'`CommandErrorResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandErrorResponse.Tpo $(DEPDIR)/hlxsimd-CommandErrorResponse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandErrorResponse.cpp' object='hlxsimd-CommandErrorResponse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandErrorResponse.o `test -f 'CommandErrorResponse.cpp' || echo '$(srcdir)/'`CommandErrorResponse.cpp

hlxsimd-CommandErrorResponse.obj: CommandErrorResponse.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandErrorResponse.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandErrorResponse.Tpo -c -o hlxsimd-CommandErrorResponse.obj `if test -f 'CommandErrorResponse.cpp'; then $(CYGPATH_W) 'CommandErrorResponse.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandErrorResponse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandErrorResponse.Tpo $(DEPDIR)/hlxsimd-CommandErrorResponse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandErrorResponse.cpp' object='hlxsimd-CommandErrorResponse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandErrorResponse.obj `if test -f 'CommandErrorResponse.cpp'; then $(CYGPATH_W) 'CommandErrorResponse.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandErrorResponse.cpp'; fi`

hlxsimd-CommandManager.o: CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandManager.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandManager.Tpo -c -o hlxsimd-CommandManager.o `test -f 'CommandManager.cpp' || echo '$(srcdir)/'`CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandManager.Tpo $(DEPDIR)/hlxsimd-CommandManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandManager.cpp' object='hlxsimd-CommandManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandManager.o `test -f 'CommandManager.cpp' || echo '$(srcdir)/'`CommandManager.cpp

hlxsimd-CommandManager.obj: CommandManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandManager.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandManager.Tpo -c -o hlxsimd-CommandManager.obj `if test -f 'CommandManager.cpp'; then $(CYGPATH_W) 'CommandManager.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandManager.Tpo $(DEPDIR)/hlxsimd-CommandManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandManager.cpp' object='hlxsimd-CommandManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandManager.obj `if test -f 'CommandManager.cpp'; then $(CYGPATH_W) 'CommandManager.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandManager.cpp'; fi`

hlxsimd-CommandNameSetResponseBasis.o: CommandNameSetResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandNameSetResponseBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandNameSetResponseBasis.Tpo -c -o hlxsimd-CommandNameSetResponseBasis.o `test -f 'CommandNameSetResponseBasis.cpp' || echo '$(srcdir)/'`CommandNameSetResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandNameSetResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandNameSetResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNameSetResponseBasis.cpp' object='hlxsimd-CommandNameSetResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandNameSetResponseBasis.o `test -f 'CommandNameSetResponseBasis.cpp' || echo '$(srcdir)/'`CommandNameSetResponseBasis.cpp

hlxsimd-CommandNameSetResponseBasis.obj: CommandNameSetResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandNameSetResponseBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandNameSetResponseBasis.Tpo -c -o hlxsimd-CommandNameSetResponseBasis.obj `if test -f 'CommandNameSetResponseBasis.cpp'; then $(CYGPATH_W) 'CommandNameSetResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNameSetResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandNameSetResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandNameSetResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandNameSetResponseBasis.cpp' object='hlxsimd-CommandNameSetResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandNameSetResponseBasis.obj `if test -f 'CommandNameSetResponseBasis.cpp'; then $(CYGPATH_W) 'CommandNameSetResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandNameSetResponseBasis.cpp'; fi`

hlxsimd-CommandPropertyResponseBases.o: CommandPropertyResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandPropertyResponseBases.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandPropertyResponseBases.Tpo -c -o hlxsimd-CommandPropertyResponseBases.o `test -f 'CommandPropertyResponseBases.cpp' || echo '$(srcdir)/'`CommandPropertyResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandPropertyResponseBases.Tpo $(DEPDIR)/hlxsimd-CommandPropertyResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandPropertyResponseBases.cpp' object='hlxsimd-CommandPropertyResponseBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandPropertyResponseBases.o `test -f 'CommandPropertyResponseBases.cpp' || echo '$(srcdir)/'`CommandPropertyResponseBases.cpp

hlxsimd-CommandPropertyResponseBases.obj: CommandPropertyResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandPropertyResponseBases.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandPropertyResponseBases.Tpo -c -o hlxsimd-CommandPropertyResponseBases.obj `if test -f 'CommandPropertyResponseBases.cpp'; then $(CYGPATH_W) 'CommandPropertyResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandPropertyResponseBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandPropertyResponseBases.Tpo $(DEPDIR)/hlxsimd-CommandPropertyResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandPropertyResponseBases.cpp' object='hlxsimd-CommandPropertyResponseBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandPropertyResponseBases.obj `if test -f 'CommandPropertyResponseBases.cpp'; then $(CYGPATH_W) 'CommandPropertyResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandPropertyResponseBases.cpp'; fi`

hlxsimd-CommandQueryResponseBasis.o: CommandQueryResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandQueryResponseBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandQueryResponseBasis.Tpo -c -o hlxsimd-CommandQueryResponseBasis.o `test -f 'CommandQueryResponseBasis.cpp' || echo '$(srcdir)/'`CommandQueryResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandQueryResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandQueryResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandQueryResponseBasis.cpp' object='hlxsimd-CommandQueryResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandQueryResponseBasis.o `test -f 'CommandQueryResponseBasis.cpp' || echo '$(srcdir)/'`CommandQueryResponseBasis.cpp

hlxsimd-CommandQueryResponseBasis.obj: CommandQueryResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandQueryResponseBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandQueryResponseBasis.Tpo -c -o hlxsimd-CommandQueryResponseBasis.obj `if test -f 'CommandQueryResponseBasis.cpp'; then $(CYGPATH_W) 'CommandQueryResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueryResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandQueryResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandQueryResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandQueryResponseBasis.cpp' object='hlxsimd-CommandQueryResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandQueryResponseBasis.obj `if test -f 'CommandQueryResponseBasis.cpp'; then $(CYGPATH_W) 'CommandQueryResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandQueryResponseBasis.cpp'; fi`

hlxsimd-CommandRequestBasis.o: CommandRequestBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandRequestBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandRequestBasis.Tpo -c -o hlxsimd-CommandRequestBasis.o `test -f 'CommandRequestBasis.cpp' || echo '$(srcdir)/'`CommandRequestBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandRequestBasis.Tpo $(DEPDIR)/hlxsimd-CommandRequestBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRequestBasis.cpp' object='hlxsimd-CommandRequestBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandRequestBasis.o `test -f 'CommandRequestBasis.cpp' || echo '$(srcdir)/'`CommandRequestBasis.cpp

hlxsimd-CommandRequestBasis.obj: CommandRequestBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandRequestBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandRequestBasis.Tpo -c -o hlxsimd-CommandRequestBasis.obj `if test -f 'CommandRequestBasis.cpp'; then $(CYGPATH_W) 'CommandRequestBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRequestBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandRequestBasis.Tpo $(DEPDIR)/hlxsimd-CommandRequestBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandRequestBasis.cpp' object='hlxsimd-CommandRequestBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandRequestBasis.obj `if test -f 'CommandRequestBasis.cpp'; then $(CYGPATH_W) 'CommandRequestBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandRequestBasis.cpp'; fi`

hlxsimd-CommandResponseBasis.o: CommandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandResponseBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandResponseBasis.Tpo -c -o hlxsimd-CommandResponseBasis.o `test -f 'CommandResponseBasis.cpp' || echo '$(srcdir)/'`CommandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandResponseBasis.cpp' object='hlxsimd-CommandResponseBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandResponseBasis.o `test -f 'CommandResponseBasis.cpp' || echo '$(srcdir)/'`CommandResponseBasis.cpp

hlxsimd-CommandResponseBasis.obj: CommandResponseBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandResponseBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandResponseBasis.Tpo -c -o hlxsimd-CommandResponseBasis.obj `if test -f 'CommandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandResponseBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandResponseBasis.Tpo $(DEPDIR)/hlxsimd-CommandResponseBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandResponseBasis.cpp' object='hlxsimd-CommandResponseBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandResponseBasis.obj `if test -f 'CommandResponseBasis.cpp'; then $(CYGPATH_W) 'CommandResponseBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandResponseBasis.cpp'; fi`

hlxsimd-CommandSourceResponseBases.o: CommandSourceResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandSourceResponseBases.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandSourceResponseBases.Tpo -c -o hlxsimd-CommandSourceResponseBases.o `test -f 'CommandSourceResponseBases.cpp' || echo '$(srcdir)/'`CommandSourceResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandSourceResponseBases.Tpo $(DEPDIR)/hlxsimd-CommandSourceResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourceResponseBases.cpp' object='hlxsimd-CommandSourceResponseBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandSourceResponseBases.o `test -f 'CommandSourceResponseBases.cpp' || echo '$(srcdir)/'`CommandSourceResponseBases.cpp

hlxsimd-CommandSourceResponseBases.obj: CommandSourceResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandSourceResponseBases.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandSourceResponseBases.Tpo -c -o hlxsimd-CommandSourceResponseBases.obj `if test -f 'CommandSourceResponseBases.cpp'; then $(CYGPATH_W) 'CommandSourceResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourceResponseBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandSourceResponseBases.Tpo $(DEPDIR)/hlxsimd-CommandSourceResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandSourceResponseBases.cpp' object='hlxsimd-CommandSourceResponseBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandSourceResponseBases.obj `if test -f 'CommandSourceResponseBases.cpp'; then $(CYGPATH_W) 'CommandSourceResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandSourceResponseBases.cpp'; fi`

hlxsimd-CommandVolumeResponseBases.o: CommandVolumeResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandVolumeResponseBases.o -MD -MP -MF $(DEPDIR)/hlxsimd-CommandVolumeResponseBases.Tpo -c -o hlxsimd-CommandVolumeResponseBases.o `test -f 'CommandVolumeResponseBases.cpp' || echo '$(srcdir)/'`CommandVolumeResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandVolumeResponseBases.Tpo $(DEPDIR)/hlxsimd-CommandVolumeResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandVolumeResponseBases.cpp' object='hlxsimd-CommandVolumeResponseBases.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandVolumeResponseBases.o `test -f 'CommandVolumeResponseBases.cpp' || echo '$(srcdir)/'`CommandVolumeResponseBases.cpp

hlxsimd-CommandVolumeResponseBases.obj: CommandVolumeResponseBases.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-CommandVolumeResponseBases.obj -MD -MP -MF $(DEPDIR)/hlxsimd-CommandVolumeResponseBases.Tpo -c -o hlxsimd-CommandVolumeResponseBases.obj `if test -f 'CommandVolumeResponseBases.cpp'; then $(CYGPATH_W) 'CommandVolumeResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandVolumeResponseBases.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-CommandVolumeResponseBases.Tpo $(DEPDIR)/hlxsimd-CommandVolumeResponseBases.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='CommandVolumeResponseBases.cpp' object='hlxsimd-CommandVolumeResponseBases.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-CommandVolumeResponseBases.obj `if test -f 'CommandVolumeResponseBases.cpp'; then $(CYGPATH_W) 'CommandVolumeResponseBases.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandVolumeResponseBases.cpp'; fi`

hlxsimd-ConfigurationController.o: ConfigurationController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConfigurationController.o -MD -MP -MF $(DEPDIR)/hlxsimd-ConfigurationController.Tpo -c -o hlxsimd-ConfigurationController.o `test -f 'ConfigurationController.cpp' || echo '$(srcdir)/'`ConfigurationController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConfigurationController.Tpo $(DEPDIR)/hlxsimd-ConfigurationController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationController.cpp' object='hlxsimd-ConfigurationController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConfigurationController.o `test -f 'ConfigurationController.cpp' || echo '$(srcdir)/'`ConfigurationController.cpp

hlxsimd-ConfigurationController.obj: ConfigurationController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConfigurationController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ConfigurationController.Tpo -c -o hlxsimd-ConfigurationController.obj `if test -f 'ConfigurationController.cpp'; then $(CYGPATH_W) 'ConfigurationController.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConfigurationController.Tpo $(DEPDIR)/hlxsimd-ConfigurationController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationController.cpp' object='hlxsimd-ConfigurationController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConfigurationController.obj `if test -f 'ConfigurationController.cpp'; then $(CYGPATH_W) 'ConfigurationController.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationController.cpp'; fi`

hlxsimd-ConfigurationControllerCommands.o: ConfigurationControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConfigurationControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-ConfigurationControllerCommands.Tpo -c -o hlxsimd-ConfigurationControllerCommands.o `test -f 'ConfigurationControllerCommands.cpp' || echo '$(srcdir)/'`ConfigurationControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConfigurationControllerCommands.Tpo $(DEPDIR)/hlxsimd-ConfigurationControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerCommands.cpp' object='hlxsimd-ConfigurationControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConfigurationControllerCommands.o `test -f 'ConfigurationControllerCommands.cpp' || echo '$(srcdir)/'`ConfigurationControllerCommands.cpp

hlxsimd-ConfigurationControllerCommands.obj: ConfigurationControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConfigurationControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ConfigurationControllerCommands.Tpo -c -o hlxsimd-ConfigurationControllerCommands.obj `if test -f 'ConfigurationControllerCommands.cpp'; then $(CYGPATH_W) 'ConfigurationControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConfigurationControllerCommands.Tpo $(DEPDIR)/hlxsimd-ConfigurationControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConfigurationControllerCommands.cpp' object='hlxsimd-ConfigurationControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConfigurationControllerCommands.obj `if test -f 'ConfigurationControllerCommands.cpp'; then $(CYGPATH_W) 'ConfigurationControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigurationControllerCommands.cpp'; fi`

hlxsimd-ConnectionBasis.o: ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionBasis.Tpo -c -o hlxsimd-ConnectionBasis.o `test -f 'ConnectionBasis.cpp' || echo '$(srcdir)/'`ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionBasis.Tpo $(DEPDIR)/hlxsimd-ConnectionBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasis.cpp' object='hlxsimd-ConnectionBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionBasis.o `test -f 'ConnectionBasis.cpp' || echo '$(srcdir)/'`ConnectionBasis.cpp

hlxsimd-ConnectionBasis.obj: ConnectionBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionBasis.Tpo -c -o hlxsimd-ConnectionBasis.obj `if test -f 'ConnectionBasis.cpp'; then $(CYGPATH_W) 'ConnectionBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionBasis.Tpo $(DEPDIR)/hlxsimd-ConnectionBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasis.cpp' object='hlxsimd-ConnectionBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionBasis.obj `if test -f 'ConnectionBasis.cpp'; then $(CYGPATH_W) 'ConnectionBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasis.cpp'; fi`

hlxsimd-ConnectionBasisDelegate.o: ConnectionBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionBasisDelegate.o -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionBasisDelegate.Tpo -c -o hlxsimd-ConnectionBasisDelegate.o `test -f 'ConnectionBasisDelegate.cpp' || echo '$(srcdir)/'`ConnectionBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionBasisDelegate.Tpo $(DEPDIR)/hlxsimd-ConnectionBasisDelegate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasisDelegate.cpp' object='hlxsimd-ConnectionBasisDelegate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionBasisDelegate.o `test -f 'ConnectionBasisDelegate.cpp' || echo '$(srcdir)/'`ConnectionBasisDelegate.cpp

hlxsimd-ConnectionBasisDelegate.obj: ConnectionBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionBasisDelegate.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionBasisDelegate.Tpo -c -o hlxsimd-ConnectionBasisDelegate.obj `if test -f 'ConnectionBasisDelegate.cpp'; then $(CYGPATH_W) 'ConnectionBasisDelegate.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasisDelegate.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionBasisDelegate.Tpo $(DEPDIR)/hlxsimd-ConnectionBasisDelegate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionBasisDelegate.cpp' object='hlxsimd-ConnectionBasisDelegate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionBasisDelegate.obj `if test -f 'ConnectionBasisDelegate.cpp'; then $(CYGPATH_W) 'ConnectionBasisDelegate.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionBasisDelegate.cpp'; fi`

hlxsimd-ConnectionFactory.o: ConnectionFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionFactory.o -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionFactory.Tpo -c -o hlxsimd-ConnectionFactory.o `test -f 'ConnectionFactory.cpp' || echo '$(srcdir)/'`ConnectionFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionFactory.Tpo $(DEPDIR)/hlxsimd-ConnectionFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionFactory.cpp' object='hlxsimd-ConnectionFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionFactory.o `test -f 'ConnectionFactory.cpp' || echo '$(srcdir)/'`ConnectionFactory.cpp

hlxsimd-ConnectionFactory.obj: ConnectionFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionFactory.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionFactory.Tpo -c -o hlxsimd-ConnectionFactory.obj `if test -f 'ConnectionFactory.cpp'; then $(CYGPATH_W) 'ConnectionFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionFactory.Tpo $(DEPDIR)/hlxsimd-ConnectionFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionFactory.cpp' object='hlxsimd-ConnectionFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionFactory.obj `if test -f 'ConnectionFactory.cpp'; then $(CYGPATH_W) 'ConnectionFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionFactory.cpp'; fi`

hlxsimd-ConnectionManager.o: ConnectionManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionManager.o -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionManager.Tpo -c -o hlxsimd-ConnectionManager.o `test -f 'ConnectionManager.cpp' || echo '$(srcdir)/'`ConnectionManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionManager.Tpo $(DEPDIR)/hlxsimd-ConnectionManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionManager.cpp' object='hlxsimd-ConnectionManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionManager.o `test -f 'ConnectionManager.cpp' || echo '$(srcdir)/'`ConnectionManager.cpp

hlxsimd-ConnectionManager.obj: ConnectionManager.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionManager.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionManager.Tpo -c -o hlxsimd-ConnectionManager.obj `if test -f 'ConnectionManager.cpp'; then $(CYGPATH_W) 'ConnectionManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManager.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionManager.Tpo $(DEPDIR)/hlxsimd-ConnectionManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionManager.cpp' object='hlxsimd-ConnectionManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionManager.obj `if test -f 'ConnectionManager.cpp'; then $(CYGPATH_W) 'ConnectionManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionManager.cpp'; fi`

hlxsimd-ConnectionTelnet.o: ConnectionTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionTelnet.o -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionTelnet.Tpo -c -o hlxsimd-ConnectionTelnet.o `test -f 'ConnectionTelnet.cpp' || echo '$(srcdir)/'`ConnectionTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionTelnet.Tpo $(DEPDIR)/hlxsimd-ConnectionTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionTelnet.cpp' object='hlxsimd-ConnectionTelnet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionTelnet.o `test -f 'ConnectionTelnet.cpp' || echo '$(srcdir)/'`ConnectionTelnet.cpp

hlxsimd-ConnectionTelnet.obj: ConnectionTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ConnectionTelnet.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ConnectionTelnet.Tpo -c -o hlxsimd-ConnectionTelnet.obj `if test -f 'ConnectionTelnet.cpp'; then $(CYGPATH_W) 'ConnectionTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionTelnet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ConnectionTelnet.Tpo $(DEPDIR)/hlxsimd-ConnectionTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ConnectionTelnet.cpp' object='hlxsimd-ConnectionTelnet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ConnectionTelnet.obj `if test -f 'ConnectionTelnet.cpp'; then $(CYGPATH_W) 'ConnectionTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionTelnet.cpp'; fi`

hlxsimd-ContainerControllerBasis.o: ContainerControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ContainerControllerBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-ContainerControllerBasis.Tpo -c -o hlxsimd-ContainerControllerBasis.o `test -f 'ContainerControllerBasis.cpp' || echo '$(srcdir)/'`ContainerControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ContainerControllerBasis.Tpo $(DEPDIR)/hlxsimd-ContainerControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ContainerControllerBasis.cpp' object='hlxsimd-ContainerControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ContainerControllerBasis.o `test -f 'ContainerControllerBasis.cpp' || echo '$(srcdir)/'`ContainerControllerBasis.cpp

hlxsimd-ContainerControllerBasis.obj: ContainerControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ContainerControllerBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ContainerControllerBasis.Tpo -c -o hlxsimd-ContainerControllerBasis.obj `if test -f 'ContainerControllerBasis.cpp'; then $(CYGPATH_W) 'ContainerControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ContainerControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ContainerControllerBasis.Tpo $(DEPDIR)/hlxsimd-ContainerControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ContainerControllerBasis.cpp' object='hlxsimd-ContainerControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ContainerControllerBasis.obj `if test -f 'ContainerControllerBasis.cpp'; then $(CYGPATH_W) 'ContainerControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ContainerControllerBasis.cpp'; fi`

hlxsimd-ControllerBasis.o: ControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ControllerBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-ControllerBasis.Tpo -c -o hlxsimd-ControllerBasis.o `test -f 'ControllerBasis.cpp' || echo '$(srcdir)/'`ControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ControllerBasis.Tpo $(DEPDIR)/hlxsimd-ControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControllerBasis.cpp' object='hlxsimd-ControllerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ControllerBasis.o `test -f 'ControllerBasis.cpp' || echo '$(srcdir)/'`ControllerBasis.cpp

hlxsimd-ControllerBasis.obj: ControllerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ControllerBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ControllerBasis.Tpo -c -o hlxsimd-ControllerBasis.obj `if test -f 'ControllerBasis.cpp'; then $(CYGPATH_W) 'ControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ControllerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ControllerBasis.Tpo $(DEPDIR)/hlxsimd-ControllerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControllerBasis.cpp' object='hlxsimd-ControllerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ControllerBasis.obj `if test -f 'ControllerBasis.cpp'; then $(CYGPATH_W) 'ControllerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ControllerBasis.cpp'; fi`

hlxsimd-ControllerBasisDelegate.o: ControllerBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ControllerBasisDelegate.o -MD -MP -MF $(DEPDIR)/hlxsimd-ControllerBasisDelegate.Tpo -c -o hlxsimd-ControllerBasisDelegate.o `test -f 'ControllerBasisDelegate.cpp' || echo '$(srcdir)/'`ControllerBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ControllerBasisDelegate.Tpo $(DEPDIR)/hlxsimd-ControllerBasisDelegate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControllerBasisDelegate.cpp' object='hlxsimd-ControllerBasisDelegate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ControllerBasisDelegate.o `test -f 'ControllerBasisDelegate.cpp' || echo '$(srcdir)/'`ControllerBasisDelegate.cpp

hlxsimd-ControllerBasisDelegate.obj: ControllerBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ControllerBasisDelegate.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ControllerBasisDelegate.Tpo -c -o hlxsimd-ControllerBasisDelegate.obj `if test -f 'ControllerBasisDelegate.cpp'; then $(CYGPATH_W) 'ControllerBasisDelegate.cpp'; else $(CYGPATH_W) '$(srcdir)/ControllerBasisDelegate.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ControllerBasisDelegate.Tpo $(DEPDIR)/hlxsimd-ControllerBasisDelegate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ControllerBasisDelegate.cpp' object='hlxsimd-ControllerBasisDelegate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ControllerBasisDelegate.obj `if test -f 'ControllerBasisDelegate.cpp'; then $(CYGPATH_W) 'ControllerBasisDelegate.cpp'; else $(CYGPATH_W) '$(srcdir)/ControllerBasisDelegate.cpp'; fi`

hlxsimd-EqualizerPresetsController.o: EqualizerPresetsController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-EqualizerPresetsController.o -MD -MP -MF $(DEPDIR)/hlxsimd-EqualizerPresetsController.Tpo -c -o hlxsimd-EqualizerPresetsController.o `test -f 'EqualizerPresetsController.cpp' || echo '$(srcdir)/'`EqualizerPresetsController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-EqualizerPresetsController.Tpo $(DEPDIR)/hlxsimd-EqualizerPresetsController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsController.cpp' object='hlxsimd-EqualizerPresetsController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-EqualizerPresetsController.o `test -f 'EqualizerPresetsController.cpp' || echo '$(srcdir)/'`EqualizerPresetsController.cpp

hlxsimd-EqualizerPresetsController.obj: EqualizerPresetsController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-EqualizerPresetsController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-EqualizerPresetsController.Tpo -c -o hlxsimd-EqualizerPresetsController.obj `if test -f 'EqualizerPresetsController.cpp'; then $(CYGPATH_W) 'EqualizerPresetsController.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-EqualizerPresetsController.Tpo $(DEPDIR)/hlxsimd-EqualizerPresetsController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsController.cpp' object='hlxsimd-EqualizerPresetsController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-EqualizerPresetsController.obj `if test -f 'EqualizerPresetsController.cpp'; then $(CYGPATH_W) 'EqualizerPresetsController.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsController.cpp'; fi`

hlxsimd-EqualizerPresetsControllerCommands.o: EqualizerPresetsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-EqualizerPresetsControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-EqualizerPresetsControllerCommands.Tpo -c -o hlxsimd-EqualizerPresetsControllerCommands.o `test -f 'EqualizerPresetsControllerCommands.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-EqualizerPresetsControllerCommands.Tpo $(DEPDIR)/hlxsimd-EqualizerPresetsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerCommands.cpp' object='hlxsimd-EqualizerPresetsControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-EqualizerPresetsControllerCommands.o `test -f 'EqualizerPresetsControllerCommands.cpp' || echo '$(srcdir)/'`EqualizerPresetsControllerCommands.cpp

hlxsimd-EqualizerPresetsControllerCommands.obj: EqualizerPresetsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-EqualizerPresetsControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-EqualizerPresetsControllerCommands.Tpo -c -o hlxsimd-EqualizerPresetsControllerCommands.obj `if test -f 'EqualizerPresetsControllerCommands.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-EqualizerPresetsControllerCommands.Tpo $(DEPDIR)/hlxsimd-EqualizerPresetsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='EqualizerPresetsControllerCommands.cpp' object='hlxsimd-EqualizerPresetsControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-EqualizerPresetsControllerCommands.obj `if test -f 'EqualizerPresetsControllerCommands.cpp'; then $(CYGPATH_W) 'EqualizerPresetsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/EqualizerPresetsControllerCommands.cpp'; fi`

hlxsimd-FavoritesController.o: FavoritesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FavoritesController.o -MD -MP -MF $(DEPDIR)/hlxsimd-FavoritesController.Tpo -c -o hlxsimd-FavoritesController.o `test -f 'FavoritesController.cpp' || echo '$(srcdir)/'`FavoritesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FavoritesController.Tpo $(DEPDIR)/hlxsimd-FavoritesController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesController.cpp' object='hlxsimd-FavoritesController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FavoritesController.o `test -f 'FavoritesController.cpp' || echo '$(srcdir)/'`FavoritesController.cpp

hlxsimd-FavoritesController.obj: FavoritesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FavoritesController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-FavoritesController.Tpo -c -o hlxsimd-FavoritesController.obj `if test -f 'FavoritesController.cpp'; then $(CYGPATH_W) 'FavoritesController.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FavoritesController.Tpo $(DEPDIR)/hlxsimd-FavoritesController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesController.cpp' object='hlxsimd-FavoritesController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FavoritesController.obj `if test -f 'FavoritesController.cpp'; then $(CYGPATH_W) 'FavoritesController.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesController.cpp'; fi`

hlxsimd-FavoritesControllerCommands.o: FavoritesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FavoritesControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-FavoritesControllerCommands.Tpo -c -o hlxsimd-FavoritesControllerCommands.o `test -f 'FavoritesControllerCommands.cpp' || echo '$(srcdir)/'`FavoritesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FavoritesControllerCommands.Tpo $(DEPDIR)/hlxsimd-FavoritesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerCommands.cpp' object='hlxsimd-FavoritesControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FavoritesControllerCommands.o `test -f 'FavoritesControllerCommands.cpp' || echo '$(srcdir)/'`FavoritesControllerCommands.cpp

hlxsimd-FavoritesControllerCommands.obj: FavoritesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FavoritesControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-FavoritesControllerCommands.Tpo -c -o hlxsimd-FavoritesControllerCommands.obj `if test -f 'FavoritesControllerCommands.cpp'; then $(CYGPATH_W) 'FavoritesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FavoritesControllerCommands.Tpo $(DEPDIR)/hlxsimd-FavoritesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FavoritesControllerCommands.cpp' object='hlxsimd-FavoritesControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FavoritesControllerCommands.obj `if test -f 'FavoritesControllerCommands.cpp'; then $(CYGPATH_W) 'FavoritesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FavoritesControllerCommands.cpp'; fi`

hlxsimd-FrontPanelController.o: FrontPanelController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FrontPanelController.o -MD -MP -MF $(DEPDIR)/hlxsimd-FrontPanelController.Tpo -c -o hlxsimd-FrontPanelController.o `test -f 'FrontPanelController.cpp' || echo '$(srcdir)/'`FrontPanelController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FrontPanelController.Tpo $(DEPDIR)/hlxsimd-FrontPanelController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelController.cpp' object='hlxsimd-FrontPanelController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FrontPanelController.o `test -f 'FrontPanelController.cpp' || echo '$(srcdir)/'`FrontPanelController.cpp

hlxsimd-FrontPanelController.obj: FrontPanelController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FrontPanelController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-FrontPanelController.Tpo -c -o hlxsimd-FrontPanelController.obj `if test -f 'FrontPanelController.cpp'; then $(CYGPATH_W) 'FrontPanelController.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FrontPanelController.Tpo $(DEPDIR)/hlxsimd-FrontPanelController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelController.cpp' object='hlxsimd-FrontPanelController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FrontPanelController.obj `if test -f 'FrontPanelController.cpp'; then $(CYGPATH_W) 'FrontPanelController.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelController.cpp'; fi`

hlxsimd-FrontPanelControllerCommands.o: FrontPanelControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FrontPanelControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-FrontPanelControllerCommands.Tpo -c -o hlxsimd-FrontPanelControllerCommands.o `test -f 'FrontPanelControllerCommands.cpp' || echo '$(srcdir)/'`FrontPanelControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FrontPanelControllerCommands.Tpo $(DEPDIR)/hlxsimd-FrontPanelControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerCommands.cpp' object='hlxsimd-FrontPanelControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FrontPanelControllerCommands.o `test -f 'FrontPanelControllerCommands.cpp' || echo '$(srcdir)/'`FrontPanelControllerCommands.cpp

hlxsimd-FrontPanelControllerCommands.obj: FrontPanelControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-FrontPanelControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-FrontPanelControllerCommands.Tpo -c -o hlxsimd-FrontPanelControllerCommands.obj `if test -f 'FrontPanelControllerCommands.cpp'; then $(CYGPATH_W) 'FrontPanelControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-FrontPanelControllerCommands.Tpo $(DEPDIR)/hlxsimd-FrontPanelControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='FrontPanelControllerCommands.cpp' object='hlxsimd-FrontPanelControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-FrontPanelControllerCommands.obj `if test -f 'FrontPanelControllerCommands.cpp'; then $(CYGPATH_W) 'FrontPanelControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/FrontPanelControllerCommands.cpp'; fi`

hlxsimd-GroupsController.o: GroupsController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-GroupsController.o -MD -MP -MF $(DEPDIR)/hlxsimd-GroupsController.Tpo -c -o hlxsimd-GroupsController.o `test -f 'GroupsController.cpp' || echo '$(srcdir)/'`GroupsController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-GroupsController.Tpo $(DEPDIR)/hlxsimd-GroupsController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsController.cpp' object='hlxsimd-GroupsController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-GroupsController.o `test -f 'GroupsController.cpp' || echo '$(srcdir)/'`GroupsController.cpp

hlxsimd-GroupsController.obj: GroupsController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-GroupsController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-GroupsController.Tpo -c -o hlxsimd-GroupsController.obj `if test -f 'GroupsController.cpp'; then $(CYGPATH_W) 'GroupsController.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-GroupsController.Tpo $(DEPDIR)/hlxsimd-GroupsController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsController.cpp' object='hlxsimd-GroupsController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-GroupsController.obj `if test -f 'GroupsController.cpp'; then $(CYGPATH_W) 'GroupsController.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsController.cpp'; fi`

hlxsimd-GroupsControllerCommands.o: GroupsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-GroupsControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-GroupsControllerCommands.Tpo -c -o hlxsimd-GroupsControllerCommands.o `test -f 'GroupsControllerCommands.cpp' || echo '$(srcdir)/'`GroupsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-GroupsControllerCommands.Tpo $(DEPDIR)/hlxsimd-GroupsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerCommands.cpp' object='hlxsimd-GroupsControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-GroupsControllerCommands.o `test -f 'GroupsControllerCommands.cpp' || echo '$(srcdir)/'`GroupsControllerCommands.cpp

hlxsimd-GroupsControllerCommands.obj: GroupsControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-GroupsControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-GroupsControllerCommands.Tpo -c -o hlxsimd-GroupsControllerCommands.obj `if test -f 'GroupsControllerCommands.cpp'; then $(CYGPATH_W) 'GroupsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-GroupsControllerCommands.Tpo $(DEPDIR)/hlxsimd-GroupsControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='GroupsControllerCommands.cpp' object='hlxsimd-GroupsControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-GroupsControllerCommands.obj `if test -f 'GroupsControllerCommands.cpp'; then $(CYGPATH_W) 'GroupsControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/GroupsControllerCommands.cpp'; fi`

hlxsimd-HLXServerController.o: HLXServerController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-HLXServerController.o -MD -MP -MF $(DEPDIR)/hlxsimd-HLXServerController.Tpo -c -o hlxsimd-HLXServerController.o `test -f 'HLXServerController.cpp' || echo '$(srcdir)/'`HLXServerController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-HLXServerController.Tpo $(DEPDIR)/hlxsimd-HLXServerController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HLXServerController.cpp' object='hlxsimd-HLXServerController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-HLXServerController.o `test -f 'HLXServerController.cpp' || echo '$(srcdir)/'`HLXServerController.cpp

hlxsimd-HLXServerController.obj: HLXServerController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-HLXServerController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-HLXServerController.Tpo -c -o hlxsimd-HLXServerController.obj `if test -f 'HLXServerController.cpp'; then $(CYGPATH_W) 'HLXServerController.cpp'; else $(CYGPATH_W) '$(srcdir)/HLXServerController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-HLXServerController.Tpo $(DEPDIR)/hlxsimd-HLXServerController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='HLXServerController.cpp' object='hlxsimd-HLXServerController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-HLXServerController.obj `if test -f 'HLXServerController.cpp'; then $(CYGPATH_W) 'HLXServerController.cpp'; else $(CYGPATH_W) '$(srcdir)/HLXServerController.cpp'; fi`

hlxsimd-InfraredController.o: InfraredController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-InfraredController.o -MD -MP -MF $(DEPDIR)/hlxsimd-InfraredController.Tpo -c -o hlxsimd-InfraredController.o `test -f 'InfraredController.cpp' || echo '$(srcdir)/'`InfraredController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-InfraredController.Tpo $(DEPDIR)/hlxsimd-InfraredController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredController.cpp' object='hlxsimd-InfraredController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-InfraredController.o `test -f 'InfraredController.cpp' || echo '$(srcdir)/'`InfraredController.cpp

hlxsimd-InfraredController.obj: InfraredController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-InfraredController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-InfraredController.Tpo -c -o hlxsimd-InfraredController.obj `if test -f 'InfraredController.cpp'; then $(CYGPATH_W) 'InfraredController.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-InfraredController.Tpo $(DEPDIR)/hlxsimd-InfraredController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredController.cpp' object='hlxsimd-InfraredController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-InfraredController.obj `if test -f 'InfraredController.cpp'; then $(CYGPATH_W) 'InfraredController.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredController.cpp'; fi`

hlxsimd-InfraredControllerCommands.o: InfraredControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-InfraredControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-InfraredControllerCommands.Tpo -c -o hlxsimd-InfraredControllerCommands.o `test -f 'InfraredControllerCommands.cpp' || echo '$(srcdir)/'`InfraredControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-InfraredControllerCommands.Tpo $(DEPDIR)/hlxsimd-InfraredControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerCommands.cpp' object='hlxsimd-InfraredControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-InfraredControllerCommands.o `test -f 'InfraredControllerCommands.cpp' || echo '$(srcdir)/'`InfraredControllerCommands.cpp

hlxsimd-InfraredControllerCommands.obj: InfraredControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-InfraredControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-InfraredControllerCommands.Tpo -c -o hlxsimd-InfraredControllerCommands.obj `if test -f 'InfraredControllerCommands.cpp'; then $(CYGPATH_W) 'InfraredControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-InfraredControllerCommands.Tpo $(DEPDIR)/hlxsimd-InfraredControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='InfraredControllerCommands.cpp' object='hlxsimd-InfraredControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-InfraredControllerCommands.obj `if test -f 'InfraredControllerCommands.cpp'; then $(CYGPATH_W) 'InfraredControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/InfraredControllerCommands.cpp'; fi`

hlxsimd-ListenerBasis.o: ListenerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerBasis.o -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerBasis.Tpo -c -o hlxsimd-ListenerBasis.o `test -f 'ListenerBasis.cpp' || echo '$(srcdir)/'`ListenerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerBasis.Tpo $(DEPDIR)/hlxsimd-ListenerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerBasis.cpp' object='hlxsimd-ListenerBasis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerBasis.o `test -f 'ListenerBasis.cpp' || echo '$(srcdir)/'`ListenerBasis.cpp

hlxsimd-ListenerBasis.obj: ListenerBasis.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerBasis.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerBasis.Tpo -c -o hlxsimd-ListenerBasis.obj `if test -f 'ListenerBasis.cpp'; then $(CYGPATH_W) 'ListenerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerBasis.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerBasis.Tpo $(DEPDIR)/hlxsimd-ListenerBasis.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerBasis.cpp' object='hlxsimd-ListenerBasis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerBasis.obj `if test -f 'ListenerBasis.cpp'; then $(CYGPATH_W) 'ListenerBasis.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerBasis.cpp'; fi`

hlxsimd-ListenerBasisDelegate.o: ListenerBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerBasisDelegate.o -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerBasisDelegate.Tpo -c -o hlxsimd-ListenerBasisDelegate.o `test -f 'ListenerBasisDelegate.cpp' || echo '$(srcdir)/'`ListenerBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerBasisDelegate.Tpo $(DEPDIR)/hlxsimd-ListenerBasisDelegate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerBasisDelegate.cpp' object='hlxsimd-ListenerBasisDelegate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerBasisDelegate.o `test -f 'ListenerBasisDelegate.cpp' || echo '$(srcdir)/'`ListenerBasisDelegate.cpp

hlxsimd-ListenerBasisDelegate.obj: ListenerBasisDelegate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerBasisDelegate.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerBasisDelegate.Tpo -c -o hlxsimd-ListenerBasisDelegate.obj `if test -f 'ListenerBasisDelegate.cpp'; then $(CYGPATH_W) 'ListenerBasisDelegate.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerBasisDelegate.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerBasisDelegate.Tpo $(DEPDIR)/hlxsimd-ListenerBasisDelegate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerBasisDelegate.cpp' object='hlxsimd-ListenerBasisDelegate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerBasisDelegate.obj `if test -f 'ListenerBasisDelegate.cpp'; then $(CYGPATH_W) 'ListenerBasisDelegate.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerBasisDelegate.cpp'; fi`

hlxsimd-ListenerFactory.o: ListenerFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerFactory.o -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerFactory.Tpo -c -o hlxsimd-ListenerFactory.o `test -f 'ListenerFactory.cpp' || echo '$(srcdir)/'`ListenerFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerFactory.Tpo $(DEPDIR)/hlxsimd-ListenerFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerFactory.cpp' object='hlxsimd-ListenerFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerFactory.o `test -f 'ListenerFactory.cpp' || echo '$(srcdir)/'`ListenerFactory.cpp

hlxsimd-ListenerFactory.obj: ListenerFactory.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerFactory.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerFactory.Tpo -c -o hlxsimd-ListenerFactory.obj `if test -f 'ListenerFactory.cpp'; then $(CYGPATH_W) 'ListenerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerFactory.Tpo $(DEPDIR)/hlxsimd-ListenerFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerFactory.cpp' object='hlxsimd-ListenerFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerFactory.obj `if test -f 'ListenerFactory.cpp'; then $(CYGPATH_W) 'ListenerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerFactory.cpp'; fi`

hlxsimd-ListenerTelnet.o: ListenerTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerTelnet.o -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerTelnet.Tpo -c -o hlxsimd-ListenerTelnet.o `test -f 'ListenerTelnet.cpp' || echo '$(srcdir)/'`ListenerTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerTelnet.Tpo $(DEPDIR)/hlxsimd-ListenerTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerTelnet.cpp' object='hlxsimd-ListenerTelnet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerTelnet.o `test -f 'ListenerTelnet.cpp' || echo '$(srcdir)/'`ListenerTelnet.cpp

hlxsimd-ListenerTelnet.obj: ListenerTelnet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ListenerTelnet.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ListenerTelnet.Tpo -c -o hlxsimd-ListenerTelnet.obj `if test -f 'ListenerTelnet.cpp'; then $(CYGPATH_W) 'ListenerTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerTelnet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ListenerTelnet.Tpo $(DEPDIR)/hlxsimd-ListenerTelnet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ListenerTelnet.cpp' object='hlxsimd-ListenerTelnet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ListenerTelnet.obj `if test -f 'ListenerTelnet.cpp'; then $(CYGPATH_W) 'ListenerTelnet.cpp'; else $(CYGPATH_W) '$(srcdir)/ListenerTelnet.cpp'; fi`

hlxsimd-NetworkController.o: NetworkController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-NetworkController.o -MD -MP -MF $(DEPDIR)/hlxsimd-NetworkController.Tpo -c -o hlxsimd-NetworkController.o `test -f 'NetworkController.cpp' || echo '$(srcdir)/'`NetworkController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-NetworkController.Tpo $(DEPDIR)/hlxsimd-NetworkController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkController.cpp' object='hlxsimd-NetworkController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-NetworkController.o `test -f 'NetworkController.cpp' || echo '$(srcdir)/'`NetworkController.cpp

hlxsimd-NetworkController.obj: NetworkController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-NetworkController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-NetworkController.Tpo -c -o hlxsimd-NetworkController.obj `if test -f 'NetworkController.cpp'; then $(CYGPATH_W) 'NetworkController.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-NetworkController.Tpo $(DEPDIR)/hlxsimd-NetworkController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkController.cpp' object='hlxsimd-NetworkController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-NetworkController.obj `if test -f 'NetworkController.cpp'; then $(CYGPATH_W) 'NetworkController.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkController.cpp'; fi`

hlxsimd-NetworkControllerCommands.o: NetworkControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-NetworkControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-NetworkControllerCommands.Tpo -c -o hlxsimd-NetworkControllerCommands.o `test -f 'NetworkControllerCommands.cpp' || echo '$(srcdir)/'`NetworkControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-NetworkControllerCommands.Tpo $(DEPDIR)/hlxsimd-NetworkControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerCommands.cpp' object='hlxsimd-NetworkControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-NetworkControllerCommands.o `test -f 'NetworkControllerCommands.cpp' || echo '$(srcdir)/'`NetworkControllerCommands.cpp

hlxsimd-NetworkControllerCommands.obj: NetworkControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-NetworkControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-NetworkControllerCommands.Tpo -c -o hlxsimd-NetworkControllerCommands.obj `if test -f 'NetworkControllerCommands.cpp'; then $(CYGPATH_W) 'NetworkControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-NetworkControllerCommands.Tpo $(DEPDIR)/hlxsimd-NetworkControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NetworkControllerCommands.cpp' object='hlxsimd-NetworkControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-NetworkControllerCommands.obj `if test -f 'NetworkControllerCommands.cpp'; then $(CYGPATH_W) 'NetworkControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/NetworkControllerCommands.cpp'; fi`

hlxsimd-SourcesController.o: SourcesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-SourcesController.o -MD -MP -MF $(DEPDIR)/hlxsimd-SourcesController.Tpo -c -o hlxsimd-SourcesController.o `test -f 'SourcesController.cpp' || echo '$(srcdir)/'`SourcesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-SourcesController.Tpo $(DEPDIR)/hlxsimd-SourcesController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesController.cpp' object='hlxsimd-SourcesController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-SourcesController.o `test -f 'SourcesController.cpp' || echo '$(srcdir)/'`SourcesController.cpp

hlxsimd-SourcesController.obj: SourcesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-SourcesController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-SourcesController.Tpo -c -o hlxsimd-SourcesController.obj `if test -f 'SourcesController.cpp'; then $(CYGPATH_W) 'SourcesController.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-SourcesController.Tpo $(DEPDIR)/hlxsimd-SourcesController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesController.cpp' object='hlxsimd-SourcesController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-SourcesController.obj `if test -f 'SourcesController.cpp'; then $(CYGPATH_W) 'SourcesController.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesController.cpp'; fi`

hlxsimd-SourcesControllerCommands.o: SourcesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-SourcesControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-SourcesControllerCommands.Tpo -c -o hlxsimd-SourcesControllerCommands.o `test -f 'SourcesControllerCommands.cpp' || echo '$(srcdir)/'`SourcesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-SourcesControllerCommands.Tpo $(DEPDIR)/hlxsimd-SourcesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerCommands.cpp' object='hlxsimd-SourcesControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-SourcesControllerCommands.o `test -f 'SourcesControllerCommands.cpp' || echo '$(srcdir)/'`SourcesControllerCommands.cpp

hlxsimd-SourcesControllerCommands.obj: SourcesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-SourcesControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-SourcesControllerCommands.Tpo -c -o hlxsimd-SourcesControllerCommands.obj `if test -f 'SourcesControllerCommands.cpp'; then $(CYGPATH_W) 'SourcesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-SourcesControllerCommands.Tpo $(DEPDIR)/hlxsimd-SourcesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='SourcesControllerCommands.cpp' object='hlxsimd-SourcesControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-SourcesControllerCommands.obj `if test -f 'SourcesControllerCommands.cpp'; then $(CYGPATH_W) 'SourcesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/SourcesControllerCommands.cpp'; fi`

hlxsimd-Utilities.o: Utilities.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-Utilities.o -MD -MP -MF $(DEPDIR)/hlxsimd-Utilities.Tpo -c -o hlxsimd-Utilities.o `test -f 'Utilities.cpp' || echo '$(srcdir)/'`Utilities.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-Utilities.Tpo $(DEPDIR)/hlxsimd-Utilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Utilities.cpp' object='hlxsimd-Utilities.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-Utilities.o `test -f 'Utilities.cpp' || echo '$(srcdir)/'`Utilities.cpp

hlxsimd-Utilities.obj: Utilities.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-Utilities.obj -MD -MP -MF $(DEPDIR)/hlxsimd-Utilities.Tpo -c -o hlxsimd-Utilities.obj `if test -f 'Utilities.cpp'; then $(CYGPATH_W) 'Utilities.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-Utilities.Tpo $(DEPDIR)/hlxsimd-Utilities.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Utilities.cpp' object='hlxsimd-Utilities.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-Utilities.obj `if test -f 'Utilities.cpp'; then $(CYGPATH_W) 'Utilities.cpp'; else $(CYGPATH_W) '$(srcdir)/Utilities.cpp'; fi`

hlxsimd-ZonesController.o: ZonesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ZonesController.o -MD -MP -MF $(DEPDIR)/hlxsimd-ZonesController.Tpo -c -o hlxsimd-ZonesController.o `test -f 'ZonesController.cpp' || echo '$(srcdir)/'`ZonesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ZonesController.Tpo $(DEPDIR)/hlxsimd-ZonesController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesController.cpp' object='hlxsimd-ZonesController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ZonesController.o `test -f 'ZonesController.cpp' || echo '$(srcdir)/'`ZonesController.cpp

hlxsimd-ZonesController.obj: ZonesController.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ZonesController.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ZonesController.Tpo -c -o hlxsimd-ZonesController.obj `if test -f 'ZonesController.cpp'; then $(CYGPATH_W) 'ZonesController.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesController.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ZonesController.Tpo $(DEPDIR)/hlxsimd-ZonesController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesController.cpp' object='hlxsimd-ZonesController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ZonesController.obj `if test -f 'ZonesController.cpp'; then $(CYGPATH_W) 'ZonesController.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesController.cpp'; fi`

hlxsimd-ZonesControllerCommands.o: ZonesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ZonesControllerCommands.o -MD -MP -MF $(DEPDIR)/hlxsimd-ZonesControllerCommands.Tpo -c -o hlxsimd-ZonesControllerCommands.o `test -f 'ZonesControllerCommands.cpp' || echo '$(srcdir)/'`ZonesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ZonesControllerCommands.Tpo $(DEPDIR)/hlxsimd-ZonesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerCommands.cpp' object='hlxsimd-ZonesControllerCommands.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ZonesControllerCommands.o `test -f 'ZonesControllerCommands.cpp' || echo '$(srcdir)/'`ZonesControllerCommands.cpp

hlxsimd-ZonesControllerCommands.obj: ZonesControllerCommands.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-ZonesControllerCommands.obj -MD -MP -MF $(DEPDIR)/hlxsimd-ZonesControllerCommands.Tpo -c -o hlxsimd-ZonesControllerCommands.obj `if test -f 'ZonesControllerCommands.cpp'; then $(CYGPATH_W) 'ZonesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerCommands.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-ZonesControllerCommands.Tpo $(DEPDIR)/hlxsimd-ZonesControllerCommands.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ZonesControllerCommands.cpp' object='hlxsimd-ZonesControllerCommands.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-ZonesControllerCommands.obj `if test -f 'ZonesControllerCommands.cpp'; then $(CYGPATH_W) 'ZonesControllerCommands.cpp'; else $(CYGPATH_W) '$(srcdir)/ZonesControllerCommands.cpp'; fi`

hlxsimd-hlxsimd.o: hlxsimd.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-hlxsimd.o -MD -MP -MF $(DEPDIR)/hlxsimd-hlxsimd.Tpo -c -o hlxsimd-hlxsimd.o `test -f 'hlxsimd.cpp' || echo '$(srcdir)/'`hlxsimd.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-hlxsimd.Tpo $(DEPDIR)/hlxsimd-hlxsimd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hlxsimd.cpp' object='hlxsimd-hlxsimd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-hlxsimd.o `test -f 'hlxsimd.cpp' || echo '$(srcdir)/'`hlxsimd.cpp

hlxsimd-hlxsimd.obj: hlxsimd.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hlxsimd-hlxsimd.obj -MD -MP -MF $(DEPDIR)/hlxsimd-hlxsimd.Tpo -c -o hlxsimd-hlxsimd.obj `if test -f 'hlxsimd.cpp'; then $(CYGPATH_W) 'hlxsimd.cpp'; else $(CYGPATH_W) '$(srcdir)/hlxsimd.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hlxsimd-hlxsimd.Tpo $(DEPDIR)/hlxsimd-hlxsimd.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hlxsimd.cpp' object='hlxsimd-hlxsimd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hlxsimd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hlxsimd-hlxsimd.obj `if test -f 'hlxsimd.cpp'; then $(CYGPATH_W) 'hlxsimd.cpp'; else $(CYGPATH_W) '$(srcdir)/hlxsimd.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS


include $(abs_top_nlbuild_autotools_dir)/automake/pre.am

include $(abs_top_nlbuild_autotools_dir)/automake/post.am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
